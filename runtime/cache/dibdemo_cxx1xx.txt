(function() {
  var require = ['/dropins/setNgMaterial/dibMenu/js/components/dibSideBarStatus.js' ];
  require.push('/dropins/setNgMaterial/dibGlobals/js/component/selectDefault.js');
  var files = [];
  angular.forEach(require, function (file,index) { 
    files.push(DIB__base_url+'/files'+file);
  });
    var dibdemo = angular.module('dibdemo', [files]);
    dibdemo.service('service196313',service196313);
    service196313.$inject = ['ajax', 'discoverService'];
    function service196313(ajax,  discoverService) {
            return {
                list : list
            };
            function list(node) {
                var url = updateQueryStringMenu(DIB__base_url + "/dropins/setNgMaterial/dibMenu/menu/list.json?containerName=dibdemo&rootMenuId=196314", node);
                var requestInfo = discoverService.addToUrl({
                    field : $('#ci196313'),
                    container : $('[dib-container=dibdemo]'),
                    url : url
                });
                return ajax.post(requestInfo, {
                    excludeFromCancels : true,
                    factoryResult : function (data) {
                        return data.records;
                    }
                })
            };
    };
    function updateQueryStringMenu(url, node) { 
        if (!!node === true) {
            return url + "&node="+node;
        } 
        return url + "&node=root";
    };
    function updateQueryStringDropdown(url, query, modelType, page) {
        url += "&limit=20&page=" + (!!page == true? page: 1);
        if (modelType=='search') { 
            url += "&showUsedOnly=true";
        }
        url += "&query=";
        if (!!query == true) {
            url += query;
        }
        return url;
    };
})();
(function() {
var dibdemo = angular.module('dibdemo');
dibdemo.component('dibdemo', {
    controllerAs: 'dibdemo',
    templateUrl: DIB__base_url + '/dropins/setNgMaterial/dibContainer/Template/view/dibdemo.html',
    controller : component__dibdemo
});
component__dibdemo.$inject = [  
            '$scope', '$ocLazyLoad', '$rootScope', '$log', '$q','service196313','containerService','recordFactory','crudService','utilityService'];
    function component__dibdemo($scope, $ocLazyLoad, $rootScope, $log, $q,service196313,containerService,recordFactory,crudService,utilityService) {
        var vm = this;
                     $scope.container = {};
            $scope.container.Id = '8622';
            $scope.container.Name = 'dibdemo';
            var crudController = "/peff/Crud";
                    $scope.model = {};
        $scope.model._GET = recordFactory.modelConstruct();
        $scope.view = {};
            $scope.view.menu = {'disabled' : false,'visible' : true, 'class' : null, 'style' : null };
            var reloadContainerFunctions = [];
            containerService.watchModel($scope);
	        $scope.common = $rootScope.common;
            $scope.primaryKeys = [];
        $scope.menus = {};
            $scope.menus.service196313 = {};
            $scope.menus.service196313.update = function (node){
                $scope.menus.service196313.loading = true;
                service196313.list(!!node? node.id : null).then(function (menu) {
                    $scope.menus.service196313.loading = false;
                    if (!!node === false) { 
                        $scope.menus.service196313.menu = menu;
                    } else { 
                        node.children = menu;
                    }
                }, function () {
                    $scope.menus.service196313.loading = false;
                });
            };
            $scope.menus.service196313.update();
        $scope.dropdowns = {};
        //load all dropdowns required for this container
            $scope.openAuditTrail = function (portAlias) {
                $log.warn('Audit trail not available for this container, as a table is not linked to this view');
            };
        //required for permissions
        vm.$postLink = function () {
            $("[dib-container=dibdemo]").trigger('onInit');
        };
        vm.$onInit = function () { 
            $scope.recordStatus = "create";
        };
        $scope.reloadContainer = function () {
            //Now we reload all the required 
            containerService.reloadChildren({containerName: 'dibdemo'});
        };
        if (!!containerService.isSubContainer($("[dib-container=dibdemo]")) === false) { 
            $scope.reloadContainer();
        }
    } 
})();
