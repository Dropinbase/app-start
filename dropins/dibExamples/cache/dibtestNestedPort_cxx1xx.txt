(function() {var require = [ ];require.push('/dropins/setNgMaterial/dibGlobals/js/component/selectDefault.js');var files = [];angular.forEach(require, function (file,index) {files.push(DIB__base_url+'/files'+file);});var dibtestNestedPort = angular.module('dibtestNestedPort', [files]);function updateQueryStringMenu(url, node) {if (!!node === true) {return url + "&node="+node;}
return url + "&node=root";};function updateQueryStringDropdown(url, query, modelType, page) {url += "&limit=20&page=" + (!!page == true? page: 1);if (modelType=='search') {url += "&showUsedOnly=true";}
url += "&query=";if (!!query == true) {url += query;}
return url;};})();(function() {var dibtestNestedPort = angular.module('dibtestNestedPort');dibtestNestedPort.component('dibtestNestedPort', {controllerAs: 'dibtestNestedPort',templateUrl: DIB__base_url + '/dropins/setNgMaterial/dibContainer/Template/view/dibtestNestedPort.html',controller : component__dibtestNestedPort});component__dibtestNestedPort.$inject = ['$scope', '$ocLazyLoad', '$rootScope', '$log', '$q','containerService','recordFactory','crudService','utilityService'];function component__dibtestNestedPort($scope, $ocLazyLoad, $rootScope, $log, $q,containerService,recordFactory,crudService,utilityService) {var vm = this;$scope.container = {};$scope.container.Id = '7167';$scope.container.Name = 'dibtestNestedPort';var crudController = "/peff/Crud";$scope.model = {};$scope.model._GET = recordFactory.modelConstruct();$scope.view = {};var reloadContainerFunctions = [];containerService.watchModel($scope);$scope.common = $rootScope.common;$scope.primaryKeys = [];$scope.menus = {};$scope.dropdowns = {};$scope.openAuditTrail = function (portAlias) {$log.warn('Audit trail not available for this container, as a table is not linked to this view');};vm.$postLink = function () {$("[dib-container=dibtestNestedPort]").trigger('onInit');};vm.$onInit = function () {$scope.recordStatus = "create";};$scope.reloadContainer = function () {containerService.reloadChildren({containerName: 'dibtestNestedPort'});};if (!!containerService.isSubContainer($("[dib-container=dibtestNestedPort]")) === false) {$scope.reloadContainer();}}})();