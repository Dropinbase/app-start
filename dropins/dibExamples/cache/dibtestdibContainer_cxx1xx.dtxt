(function() {var require = ['/dropins/setNgMaterial/dibGlobals/js/component/timeDatePickerInput.js' ];require.push('/dropins/setNgMaterial/dibGlobals/js/component/selectDefault.js');var files = [];angular.forEach(require, function (file,index) {files.push(DIB.base_url+'/files'+file);});var dibtestdibContainer = angular.module('dibtestdibContainer', [files]);dibtestdibContainer.factory('dibtestdibContainerDefinition',dibtestdibContainerDefinition);dibtestdibContainerDefinition.$inject = ['dibContainer'];function dibtestdibContainerDefinition(dibContainer) {return {model : model,view : view,info : info,primaryKeys : primaryKeys};function model() {var model = {};model._GET = {};model['textfield'] = '';model._GET['textfield'] = dibContainer.modelItem({key : 'textfield',dataType : "text",create : true,update : true,service : null,itemAlias : false});model['checkboxfield'] = '';model._GET['checkboxfield'] = dibContainer.modelItem({key : 'checkboxfield',dataType : "boolean",create : true,update : true,service : null,itemAlias : false});model['datefield'] = '';model._GET['datefield'] = dibContainer.modelItem({key : 'datefield',dataType : "date",create : true,update : true,service : null,itemAlias : false});return model;};function view() {var view = {};return view;};function info(){var container = {};container.Id = '7163';container.Name = 'dibtestdibContainer';container.SubContainerItemAliases = [];return container;};function primaryKeys() {return [];};};dibtestdibContainer.component('dibtestdibContainer', {controllerAs: 'dibtestdibContainer',templateUrl: DIB.base_url + '/dropins/setNgMaterial/dibContainer/Template/view/dibtestdibContainer.html',controller : component__dibtestdibContainer});component__dibtestdibContainer.$inject = [ 'dibtestdibContainerDefinition','$scope','$element','dibCrud','dibNavigation','dibAction','dibContainer','dibDiscover','dibRecord','dibUtility','dibCommon','$log','$q','$ocLazyLoad'];function component__dibtestdibContainer(dibtestdibContainerDefinition,$scope,$element,dibCrud,dibNavigation,dibAction,dibContainer,dibDiscover,dibRecord,dibUtility,dibCommon,$log,$q,$ocLazyLoad) {var ctrl = this;var crudController = "/peff/Crud";var $dibContainer = $element.first();$scope.container = dibtestdibContainerDefinition.info();$scope.model = dibtestdibContainerDefinition.model();$scope.view = dibtestdibContainerDefinition.view();$scope.primaryKeys = dibtestdibContainerDefinition.primaryKeys();$scope.dibCommon = dibCommon;dibContainer.watchModel($scope, function () {});var $dibContainer = $element.first();$scope.menus = {};function filterList($scope,$dibContainer,service, query, dropdown) {return service.list($scope,$dibContainer, query).then(function (items) {dropdown.items = items;return $q.when();});}
$scope.dropdowns = {};$scope.openAuditTrail = function (portAlias) {$log.warn('Audit trail not available for this container, as a table is not linked to this view');};ctrl.$onInit = function () {$scope.recordStatus = "create";$scope.reloadContainer = function () {dibContainer.reloadChildren({containerName: 'dibtestdibContainer'});};};ctrl.$postLink = function () {$scope.reloadContainer({ force : true });};}})();