(function() {var require = [ ];require.push('/dropins/setNgMaterial/dibGlobals/js/component/selectDefault.js');var files = [];angular.forEach(require, function (file,index) {files.push(DIB.base_url+'/files'+file);});files.push( DIB.base_url + '/dropins/setNgMaterial/dibGrid/Template/controller/dibtestConsultantGrid.js');files.push( DIB.base_url + '/dropins/setNgMaterial/dibHtmlTemplate/Template/controller/dibtestETEventsReport.js');files.push( DIB.base_url + '/dropins/setNgMaterial/dibGrid/Template/controller/dibtestConsultantEventsGrid.js');files.push( DIB.base_url + '/dropins/setNgMaterial/dibGrid/Template/controller/dibtestCompanyGrid.js');files.push( DIB.base_url + '/dropins/setNgMaterial/dibForm/Template/controller/dibtestChildForm.js');files.push( DIB.base_url + '/dropins/setNgMaterial/dibGrid/Template/controller/dibtestCompanyConsultantGrid.js');var dibexEvents = angular.module('dibexEvents', [files]);dibexEvents.service('service155095',service155095);service155095.$inject = ['dibAjax', 'dibDiscover', '$q'];function service155095(dibAjax, dibDiscover, $q) {return {list : list};function list($scope, $element, query, modelType, page) {var url = dibDiscover.updateQueryStringDropdown(DIB.base_url + "/peff/Crud/componentlist/dibexEvents?containerItemId=155095", query, modelType, page);var requestInfo = dibDiscover.addToUrl({field :$('#ci155095'),$scope : $scope,container : $element,url : url});return dibAjax.post(requestInfo, {excludeFromCancels : true,factoryResult : function (data) {return data.records;}});};};dibexEvents.service('service155121',service155121);service155121.$inject = ['dibAjax', 'dibDiscover', '$q'];function service155121(dibAjax, dibDiscover, $q) {return {list : list};function list($scope, $element, query, modelType, page) {var url = dibDiscover.updateQueryStringDropdown(DIB.base_url + "/peff/Crud/componentlist/dibexEvents?containerItemId=155121", query, modelType, page);var requestInfo = dibDiscover.addToUrl({field :$('#ci155121'),$scope : $scope,container : $element,url : url});return dibAjax.post(requestInfo, {excludeFromCancels : true,factoryResult : function (data) {return data.records;}});};};dibexEvents.service('service180007',service180007);service180007.$inject = ['dibAjax', 'dibDiscover', '$q'];function service180007(dibAjax, dibDiscover, $q) {return {list : list};function list($scope, $element, query, modelType, page) {var url = dibDiscover.updateQueryStringDropdown(DIB.base_url + "/peff/Crud/componentlist/dibexEvents?containerItemId=180007", query, modelType, page);var requestInfo = dibDiscover.addToUrl({field :$('#ci180007'),$scope : $scope,container : $element,url : url});return dibAjax.post(requestInfo, {excludeFromCancels : true,factoryResult : function (data) {return data.records;}});};};dibexEvents.service('service194831',service194831);service194831.$inject = ['dibAjax', 'dibDiscover', '$q'];function service194831(dibAjax, dibDiscover, $q) {return {list : list};function list($scope, $element, query, modelType, page) {var url = dibDiscover.updateQueryStringDropdown(DIB.base_url + "/peff/Crud/componentlist/dibexEvents?containerItemId=194831", query, modelType, page);var requestInfo = dibDiscover.addToUrl({field :$('#ci194831'),$scope : $scope,container : $element,url : url});return dibAjax.post(requestInfo, {excludeFromCancels : true,factoryResult : function (data) {return data.records;}});};};dibexEvents.factory('dibexEventsDefinition',dibexEventsDefinition);dibexEventsDefinition.$inject = ['dibContainer','service155095','service155121','service180007','service194831'];function dibexEventsDefinition(dibContainer,service155095,service155121,service180007,service194831) {return {model : model,view : view,info : info,primaryKeys : primaryKeys};function model() {var model = {};model._GET = {};model['selected___test_company_id'] = '';model._GET['test_company_id'] = dibContainer.modelItem({key : 'test_company_id',dataType : "select",create : true,update : true,service : service155095,itemAlias : 'companyId'});model['Textfield1'] = '';model._GET['Textfield1'] = dibContainer.modelItem({key : 'Textfield1',dataType : "text",create : true,update : true,service : null,itemAlias : 'Textfield1'});model['Textfield2'] = '';model._GET['Textfield2'] = dibContainer.modelItem({key : 'Textfield2',dataType : "text",create : true,update : true,service : null,itemAlias : 'Textfield2'});model['selected___company1Id'] = '';model._GET['company1Id'] = dibContainer.modelItem({key : 'company1Id',dataType : "select",create : true,update : true,service : service155121,itemAlias : 'company1Id'});model['companyList'] = '';model._GET['companyList'] = dibContainer.modelItem({key : 'companyList',dataType : "text",create : true,update : true,service : null,itemAlias : 'companyList'});model['recipientAlias'] = '';model._GET['recipientAlias'] = dibContainer.modelItem({key : 'recipientAlias',dataType : "text",create : true,update : true,service : null,itemAlias : 'recipientAlias'});model['msg'] = '';model._GET['msg'] = dibContainer.modelItem({key : 'msg',dataType : "text",create : true,update : true,service : null,itemAlias : 'msg'});model['text1'] = '';model._GET['text1'] = dibContainer.modelItem({key : 'text1',dataType : "text",create : true,update : true,service : null,itemAlias : 'text1'});model['selected___queueLoginId'] = '';model._GET['queueLoginId'] = dibContainer.modelItem({key : 'queueLoginId',dataType : "select",create : true,update : true,service : service180007,itemAlias : 'queueLoginId'});model['queueMsg'] = '';model._GET['queueMsg'] = dibContainer.modelItem({key : 'queueMsg',dataType : "text",create : true,update : true,service : null,itemAlias : 'queueMsg'});model['selected___htmlCompanyId'] = '';model._GET['htmlCompanyId'] = dibContainer.modelItem({key : 'htmlCompanyId',dataType : "select",create : true,update : true,service : service194831,itemAlias : 'htmlCompanyId'});model['containerEvents'] = '';model._GET['containerEvents'] = dibContainer.modelItem({key : 'containerEvents',dataType : "text",create : true,update : true,service : null,itemAlias : 'containerEvents'});model['SelectTextEvent'] = '';model._GET['SelectTextEvent'] = dibContainer.modelItem({key : 'SelectTextEvent',dataType : "text",create : true,update : true,service : null,itemAlias : false});model['CopyEvent'] = '';model._GET['CopyEvent'] = dibContainer.modelItem({key : 'CopyEvent',dataType : "text",create : true,update : true,service : null,itemAlias : false});model['userAlias'] = '';model._GET['userAlias'] = dibContainer.modelItem({key : 'userAlias',dataType : "text",create : true,update : true,service : null,itemAlias : 'userAlias'});return model;};function view() {var view = {};view.mdtabs = {'disabled' : false,'visible' : true, 'class' : null, 'style' : null };view.colBasics = {'disabled' : false,'visible' : true, 'class' : null, 'style' : null };view.dibtestConsultantGrid = {'disabled' : false,'visible' : true, 'class' : null, 'style' : null };view.subTestHtmlEvents = {'disabled' : false,'visible' : true, 'class' : null, 'style' : null };view.companyId = {'disabled' : false,'visible' : true, 'class' : null, 'style' : null };view.btnHelloWorld = {'disabled' : false,'visible' : true, 'class' : null, 'style' : null };view.Textfield1 = {'disabled' : false,'visible' : true, 'class' : null, 'style' : null };view.Textfield2 = {'disabled' : false,'visible' : true, 'class' : null, 'style' : null };view.activeFilterCompany1 = {'disabled' : false,'visible' : true, 'class' : null, 'style' : null };view.activeFilterSupervisors = {'disabled' : false,'visible' : true, 'class' : null, 'style' : null };view.none = {'disabled' : false,'visible' : true, 'class' : null, 'style' : null };view.company1Id = {'disabled' : false,'visible' : true, 'class' : null, 'style' : null };view.btnPrompt = {'disabled' : false,'visible' : true, 'class' : null, 'style' : null };view.companyList = {'disabled' : false,'visible' : true, 'class' : null, 'style' : null };view.recipientAlias = {'disabled' : false,'visible' : true, 'class' : null, 'style' : null };view.msg = {'disabled' : false,'visible' : true, 'class' : null, 'style' : null };view.test_company_grid = {'disabled' : false,'visible' : true, 'class' : null, 'style' : null };view.hiddenPopupButton = {'disabled' : false,'visible' : true, 'class' : null, 'style' : null };view.hiddenPromptButton = {'disabled' : false,'visible' : true, 'class' : null, 'style' : null };view.text1 = {'disabled' : false,'visible' : true, 'class' : null, 'style' : null };view.queueLoginId = {'disabled' : false,'visible' : true, 'class' : null, 'style' : null };view.queueMsg = {'disabled' : false,'visible' : true, 'class' : null, 'style' : null };view.btnHidden = {'disabled' : false,'visible' : true, 'class' : null, 'style' : null };view.btnDisable = {'disabled' : false,'visible' : true, 'class' : null, 'style' : null };view.btnSetStyleClass = {'disabled' : false,'visible' : true, 'class' : null, 'style' : null };view.CompanyConsultantGrid = {'disabled' : false,'visible' : true, 'class' : null, 'style' : null };view.activeFilterOriginal = {'disabled' : false,'visible' : true, 'class' : null, 'style' : null };view.htmlCompanyId = {'disabled' : false,'visible' : true, 'class' : null, 'style' : null };view.containerEvents = {'disabled' : false,'visible' : true, 'class' : null, 'style' : null };view.userAlias = {'disabled' : false,'visible' : true, 'class' : null, 'style' : null };return view;};function info(){var container = {};container.Id = '7146';container.Name = 'dibexEvents';container.SubContainerItemAliases = ["dibtestConsultantGrid","subTestHtmlEvents","test_company_grid","CompanyConsultantGrid"];return container;};function primaryKeys() {return [];};};dibexEvents.component('dibexEvents', {controllerAs: 'dibexEvents',templateUrl: DIB.base_url + '/dropins/setNgMaterial/dibContainer/Template/view/dibexEvents.html?v=' + new Date().getTime(),controller : component__dibexEvents});component__dibexEvents.$inject = [ 'dibexEventsDefinition','$scope','$element','dibCrud','dibNavigation','dibAction','dibContainer','dibDiscover','dibRecord','dibUtility','dibCommon','$log','$q','$ocLazyLoad','service155095','service155121','service180007','service194831'];function component__dibexEvents(dibexEventsDefinition,$scope,$element,dibCrud,dibNavigation,dibAction,dibContainer,dibDiscover,dibRecord,dibUtility,dibCommon,$log,$q,$ocLazyLoad,service155095,service155121,service180007,service194831) {var ctrl = this;var crudController = "/peff/Crud";var $dibContainer = $element.first();$scope.container = dibexEventsDefinition.info();$scope.model = dibexEventsDefinition.model();$scope.view = dibexEventsDefinition.view();$scope.primaryKeys = dibexEventsDefinition.primaryKeys();$scope.dibCommon = dibCommon;dibContainer.watchModel($scope, function () {});var $dibContainer = $element.first();$scope.menus = {};function filterList($scope,$dibContainer,service, query, dropdown) {return service.list($scope,$dibContainer, query).then(function (items) {dropdown.items = items;return $q.when();});}
$scope.dropdowns = {};$scope.dropdowns.service155095 = {};$scope.dropdowns.service155095.items = [];var cancelService155095 = null;var query155095 = '';$scope.loadService155095 = function (query, skipTimeout) {if (query155095 != query) {query155095 = query;if (!!skipTimeout) {return filterList($scope,$dibContainer,service155095, query, $scope.dropdowns.service155095);} else {if (!!cancelService155095) $timeout.clear(cancelService155095);cancelService155095 = $timeout(function () {return filterList($scope,$dibContainer,service155095, query, $scope.dropdowns.service155095);}, 100);return cancelService155095;}};};$scope.dropdowns.service155095.getItems = function (query,modelType) {return service155095.list($scope,$dibContainer, query,modelType);};$scope.select155095 = function (model,modelName,fieldName) {if (!!modelName == false) modelName ="model";var $element =  $('#ci155095');if (!!$element.attr('select-model') === false) {$element = $element.find('[select-model]');}
var modelName =  'selected___' + fieldName;$element.trigger('select');if (!!model[modelName]  === false) {return  false;}
angular.forEach($scope.dropdowns.service155095.items, function (item, index)   {if (item.id == model[modelName]['id']) {model[modelName]['id_display_value'] = item.id_display_value;return false;}});};$scope.dropdowns.service155121 = {};$scope.dropdowns.service155121.items = [];var cancelService155121 = null;var query155121 = '';$scope.loadService155121 = function (query, skipTimeout) {if (query155121 != query) {query155121 = query;if (!!skipTimeout) {return filterList($scope,$dibContainer,service155121, query, $scope.dropdowns.service155121);} else {if (!!cancelService155121) $timeout.clear(cancelService155121);cancelService155121 = $timeout(function () {return filterList($scope,$dibContainer,service155121, query, $scope.dropdowns.service155121);}, 100);return cancelService155121;}};};$scope.dropdowns.service155121.getItems = function (query,modelType) {return service155121.list($scope,$dibContainer, query,modelType);};$scope.select155121 = function (model,modelName,fieldName) {if (!!modelName == false) modelName ="model";var $element =  $('#ci155121');if (!!$element.attr('select-model') === false) {$element = $element.find('[select-model]');}
var modelName =  'selected___' + fieldName;$element.trigger('select');if (!!model[modelName]  === false) {return  false;}
angular.forEach($scope.dropdowns.service155121.items, function (item, index)   {if (item.id == model[modelName]['id']) {model[modelName]['id_display_value'] = item.id_display_value;return false;}});};$scope.dropdowns.service180007 = {};$scope.dropdowns.service180007.items = [];var cancelService180007 = null;var query180007 = '';$scope.loadService180007 = function (query, skipTimeout) {if (query180007 != query) {query180007 = query;if (!!skipTimeout) {return filterList($scope,$dibContainer,service180007, query, $scope.dropdowns.service180007);} else {if (!!cancelService180007) $timeout.clear(cancelService180007);cancelService180007 = $timeout(function () {return filterList($scope,$dibContainer,service180007, query, $scope.dropdowns.service180007);}, 100);return cancelService180007;}};};$scope.dropdowns.service180007.getItems = function (query,modelType) {return service180007.list($scope,$dibContainer, query,modelType);};$scope.select180007 = function (model,modelName,fieldName) {if (!!modelName == false) modelName ="model";var $element =  $('#ci180007');if (!!$element.attr('select-model') === false) {$element = $element.find('[select-model]');}
var modelName =  'selected___' + fieldName;$element.trigger('select');if (!!model[modelName]  === false) {return  false;}
angular.forEach($scope.dropdowns.service180007.items, function (item, index)   {if (item.id == model[modelName]['id']) {model[modelName]['id_display_value'] = item.id_display_value;return false;}});};$scope.dropdowns.service194831 = {};$scope.dropdowns.service194831.items = [];var cancelService194831 = null;var query194831 = '';$scope.loadService194831 = function (query, skipTimeout) {if (query194831 != query) {query194831 = query;if (!!skipTimeout) {return filterList($scope,$dibContainer,service194831, query, $scope.dropdowns.service194831);} else {if (!!cancelService194831) $timeout.clear(cancelService194831);cancelService194831 = $timeout(function () {return filterList($scope,$dibContainer,service194831, query, $scope.dropdowns.service194831);}, 100);return cancelService194831;}};};$scope.dropdowns.service194831.getItems = function (query,modelType) {return service194831.list($scope,$dibContainer, query,modelType);};$scope.select194831 = function (model,modelName,fieldName) {if (!!modelName == false) modelName ="model";var $element =  $('#ci194831');if (!!$element.attr('select-model') === false) {$element = $element.find('[select-model]');}
var modelName =  'selected___' + fieldName;$element.trigger('select');if (!!model[modelName]  === false) {return  false;}
angular.forEach($scope.dropdowns.service194831.items, function (item, index)   {if (item.id == model[modelName]['id']) {model[modelName]['id_display_value'] = item.id_display_value;return false;}});};$scope.openAuditTrail = function (portAlias) {$log.warn('Audit trail not available for this container, as a table is not linked to this view');};ctrl.$onInit = function () {$scope.recordStatus = "create";$scope.reloadContainer = function () {dibContainer.reloadChildren({containerName: 'dibexEvents'});};};ctrl.$postLink = function () {var additionalInfoOnEvent = null;dibAction.executeAction({scope : $scope,field : !!$element ? $element.first() : $('[dib-container=dibexEvents]'),containerName: 'dibexEvents',triggerType: 'postLink',nextActionItem: '',containerEventId: 'dib*i0vvfa1g5n',containerId: 7146,submitUrl: '/dropins/dibExamples/Events/containerEvents',itemAlias: '',refreshItemId : '',responseType: 'actions'}
, additionalInfoOnEvent);$scope.reloadContainer({ force : true });dibContainer.injectionCompleted();};}})();