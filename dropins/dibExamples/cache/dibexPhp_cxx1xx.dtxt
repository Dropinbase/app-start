(function() {
  var require = [ ];
  require.push('/dropins/setNgMaterial/dibGlobals/js/component/selectDefault.js');
  var files = [];
  angular.forEach(require, function (file,index) { 
    files.push(DIB__base_url+'/files'+file);
  });
          files.push( DIB__base_url + '/dropins/setNgMaterial/dibGrid/Template/controller/dibTestCompanyAsyncGrid.js');
    var dibexPhp = angular.module('dibexPhp', [files]);
    function updateQueryStringMenu(url, node) { 
        if (!!node === true) {
            return url + "&node="+node;
        } 
        return url + "&node=root";
    };
    function updateQueryStringDropdown(url, query, modelType, page) {
        url += "&limit=20&page=" + (!!page == true? page: 1);
        if (modelType=='search') { 
            url += "&showUsedOnly=true";
        }
        url += "&query=";
        if (!!query == true) {
            url += query;
        }
        return url;
    };
})();
(function() {
var dibexPhp = angular.module('dibexPhp');
dibexPhp.component('dibexPhp', {
    controllerAs: 'dibexPhp',
    templateUrl: DIB__base_url + '/dropins/setNgMaterial/dibContainer/Template/view/dibexPhp.html',
    controller : component__dibexPhp
});
component__dibexPhp.$inject = [  
            'actionService', '$element' ,'$scope', '$ocLazyLoad', '$rootScope', '$log', '$q','containerService','recordFactory','crudService','utilityService'];
    function component__dibexPhp(actionService, $element ,$scope, $ocLazyLoad, $rootScope, $log, $q,containerService,recordFactory,crudService,utilityService) {
        var vm = this;
        //required for permissions
        vm.$postLink = function () {
        };
        vm.$onInit = function () { 
                        $scope.container = {};
            $scope.container.Id = '8062';
            $scope.container.Name = 'dibexPhp';
            $scope.container.SubContainerItemAliases = []; 
            var crudController = "/peff/Crud";
                    $scope.model = {};
        $scope.model._GET = recordFactory.modelConstruct($scope);
        $scope.model._GET['sendText'] = containerService.modelItem({
            dataType : "text", 
            create : true,
            update : true,
            service : null,
            itemAlias : 'sendText'
        });
        $scope.model._GET['msg'] = containerService.modelItem({
            dataType : "text", 
            create : true,
            update : true,
            service : null,
            itemAlias : 'msg'
        });
        $scope.view = {};
            $scope.view.sendText = {'disabled' : false,'visible' : true, 'class' : null, 'style' : null };
            $scope.view.msg = {'disabled' : false,'visible' : true, 'class' : null, 'style' : null };
            var reloadContainerFunctions = [];
            containerService.watchModel($scope);
	        $scope.common = $rootScope.common;
            $scope.primaryKeys = [];
        $scope.menus = {};
        $scope.dropdowns = {};
        //load all dropdowns required for this container
            $scope.openAuditTrail = function (portAlias) {
                $log.warn('Audit trail not available for this container, as a table is not linked to this view');
            };
            $scope.recordStatus = "create";
            $scope.reloadContainer = function () {
                //Now we reload all the required 
                containerService.reloadChildren({containerName: 'dibexPhp'});
            };
            if (!!containerService.isSubContainer($("[dib-container=dibexPhp]")) === false) { 
                $scope.reloadContainer();
            }
        };
    } 
})();
