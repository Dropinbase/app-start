(function() {var require = ['/dropins/setNgMaterial/dibGrid/js/components/dibTableWidth.js','/dropins/setNgMaterial/dibGrid/js/components/dibInlineEdit.js','/dropins/setNgMaterial/dibGrid/js/services/dibGrid.js','/dropins/setNgMaterial/dibForm/js/services/dibForm.js'];require.push('/dropins/setNgMaterial/dibGlobals/js/component/selectDefault.js');var files = [];angular.forEach(require, function (file,index) {files.push(DIB.base_url+'/files'+file);});var dibtestConsultantGrid = angular.module('dibtestConsultantGrid', [files]);dibtestConsultantGrid.service('service155193',service155193);service155193.$inject = ['dibAjax', 'dibDiscover', '$q'];function service155193(dibAjax, dibDiscover, $q) {return {list : list};function list($scope, $element, query, modelType, page) {var url = dibDiscover.updateQueryStringDropdown(DIB.base_url + "/peff/Crud/componentlist/dibtestConsultantGrid?containerItemId=155193", query, modelType, page);var requestInfo = dibDiscover.addToUrl({field :$('#ci155193'),$scope : $scope,container : $element,url : url});return dibAjax.post(requestInfo, {excludeFromCancels : true,factoryResult : function (data) {return data.records;}});};};dibtestConsultantGrid.factory('dibtestConsultantGridDefinition',dibtestConsultantGridDefinition);dibtestConsultantGridDefinition.$inject = ['dibContainer','service155193'];function dibtestConsultantGridDefinition(dibContainer,service155193) {return {model : model,view : view,info : info,primaryKeys : primaryKeys};function model() {var model = {};model._GET = {};model['id'] = '';model._GET['id'] = dibContainer.modelItem({key : 'id',dataType : "number",create : false,update : false,service : null,itemAlias : false});model['name'] = '';model._GET['name'] = dibContainer.modelItem({key : 'name',dataType : "text",create : true,update : true,service : null,itemAlias : false});model['notes'] = '';model._GET['notes'] = dibContainer.modelItem({key : 'notes',dataType : "text",create : true,update : true,service : null,itemAlias : false});model['mobile'] = '';model._GET['mobile'] = dibContainer.modelItem({key : 'mobile',dataType : "text",create : true,update : true,service : null,itemAlias : false});model['email'] = '';model._GET['email'] = dibContainer.modelItem({key : 'email',dataType : "text",create : true,update : true,service : null,itemAlias : false});model['address1'] = '';model._GET['address1'] = dibContainer.modelItem({key : 'address1',dataType : "text",create : true,update : true,service : null,itemAlias : false});model['address2'] = '';model._GET['address2'] = dibContainer.modelItem({key : 'address2',dataType : "text",create : true,update : true,service : null,itemAlias : false});model['city_town'] = '';model._GET['city_town'] = dibContainer.modelItem({key : 'city_town',dataType : "text",create : true,update : true,service : null,itemAlias : false});model['country'] = '';model._GET['country'] = dibContainer.modelItem({key : 'country',dataType : "text",create : true,update : true,service : null,itemAlias : false});model['longitude'] = '';model._GET['longitude'] = dibContainer.modelItem({key : 'longitude',dataType : "number",create : true,update : true,service : null,itemAlias : false});model['latitude'] = '';model._GET['latitude'] = dibContainer.modelItem({key : 'latitude',dataType : "number",create : true,update : true,service : null,itemAlias : false});model['select___employed_at_id'] = '';model._GET['employed_at_id'] = dibContainer.modelItem({key : 'employed_at_id',dataType : "select",create : true,update : true,service : service155193,itemAlias : false});return model;};function view() {var view = {};return view;};function info(){var container = {};container.Id = '7147';container.Name = 'dibtestConsultantGrid';container.SubContainerItemAliases = [];return container;};function primaryKeys() {return ["id"];};};dibtestConsultantGrid.component('dibtestConsultantGrid', {controllerAs: 'dibtestConsultantGrid',templateUrl: DIB.base_url + '/dropins/setNgMaterial/dibGrid/Template/view/dibtestConsultantGrid.html',controller : component__dibtestConsultantGrid});component__dibtestConsultantGrid.$inject = [ 'dibtestConsultantGridDefinition','$scope','$element','dibCrud','dibNavigation','dibAction','dibContainer','dibDiscover','dibRecord','dibUtility','dibCommon','$log','$q','$ocLazyLoad','dibGrid', 'dibForm', '$location', '$timeout', 'dibMessage','dibKeysPressed','service155193'];function component__dibtestConsultantGrid(dibtestConsultantGridDefinition,$scope,$element,dibCrud,dibNavigation,dibAction,dibContainer,dibDiscover,dibRecord,dibUtility,dibCommon,$log,$q,$ocLazyLoad,dibGrid, dibForm, $location, $timeout, dibMessage,dibKeysPressed,service155193) {var ctrl = this;var crudController = "/peff/Crud";var $dibContainer = $element.first();$scope.container = dibtestConsultantGridDefinition.info();$scope.model = dibtestConsultantGridDefinition.model();$scope.view = dibtestConsultantGridDefinition.view();$scope.primaryKeys = dibtestConsultantGridDefinition.primaryKeys();$scope.dibCommon = dibCommon;dibContainer.watchModel($scope, function () {});var $dibContainer = $element.first();$scope.menus = {};function filterList($scope,$dibContainer,service, query, dropdown) {return service.list($scope,$dibContainer, query).then(function (items) {dropdown.items = items;return $q.when();});}
$scope.dropdowns = {};$scope.dropdowns.service155193 = {};$scope.dropdowns.service155193.items = [];var cancelService155193 = null;var query155193 = '';$scope.loadService155193 = function (query, skipTimeout) {if (query155193 != query) {query155193 = query;if (!!skipTimeout) {return filterList($scope,$dibContainer,service155193, query, $scope.dropdowns.service155193);} else {$timeout.clear(cancelService155193);cancelService155193 = $timeout(function () {return filterList($scope,$dibContainer,service155193, query, $scope.dropdowns.service155193);}, 100);return cancelService155193;}};};$scope.dropdowns.service155193.getItems = function (query,modelType) {return service155193.list($scope,$dibContainer, query,modelType);};$scope.select155193 = function (model,modelName,fieldName) {if (!!modelName == false) modelName ="model";var $element =  $('#ci155193');if (!!$element.attr('select-model') === false) {$element = $element.find('[select-model]');}
var modelName =  'selected___' + fieldName;$element.trigger('select');if (!!model[modelName]  === false) {return  false;}
angular.forEach($scope.dropdowns.service155193.items, function (item, index)   {if (item.id == model[modelName]['id']) {model[modelName]['id_display_value'] = item.id_display_value;return false;}});};$scope.openAuditTrail = function (portAlias) {var primaryKeyData = dibRecord.primaryKeyAuditIds($scope.primaryKeys, $scope.model);if (primaryKeyData.length > 0) {dibCommon.goTo(DIB.audit_trail_container,portAlias,true,"?filter_pef_table_id=%3D1442&filter_record_id=%3D"+primaryKeyData);} else {dibCommon.goTo(DIB.audit_trail_container,portAlias,true,"?filter_pef_table_id=%3D1442");}};$scope.gridOptions = {};$scope.gridOptions.data = 'gridData';$scope.gridOptions.sortFields = {};$scope.gridOptions.sortNr = 0;$scope.gridOptions.toggleSort = function (fieldName) {dibGrid.toggleSort($scope,"dibtestConsultantGrid",fieldName);loadGrid();};$scope.search = {};$scope.clearSearch = function () {dibGrid.clearSearch($scope);};$scope.searchGrid = function () {dibGrid.prepareSearch($scope, "dibtestConsultantGrid");loadGrid();};$scope.$watch("showSearch", function () {$timeout(function () {$("[dib-container=dibtestConsultantGrid]").find('.dib-grid-column-content').trigger('refreshHeight')},50);if (!!$scope.showSearch === false) {$scope.search = {};if (!!$scope.gridData) loadGrid();}});ctrl.$onInit = function () {$scope.gridOptions.inlineAddShow = "" == "true";$scope.toggleInlineAdd = function () {dibGrid.toggleInlineAdd($scope, $element);};$scope.useSelectedRow = function ($event, model) {dibGrid.useSelectedRow($scope, $event, model);};$scope.selectedItems = [];$scope.lastSelectedItem = null;var arraySelected = [];$scope.selectRow = function (row,$event) {dibGrid.selectRow($scope,$element, row, $event);if (!!$event) return;//To enable double click we cancel the event
if (row.___selected) {}  else {}};$scope.saveRow = function ($event, row) {var element = $($event.target).parents('[dib-inline-edit]');element.trigger('editClose');$event.stopPropagation();$event.preventDefault();};$scope.addRow = function ($event, row) {var element = $($event.target).parents('[dib-inline-edit]');element.trigger('addRow');$event.stopPropagation();$event.preventDefault();};$scope.cancelRow = function ($event, row) {var element = $($event.target).parents('[dib-inline-edit]');row.___editing = false;row.___selected = true;element.find('[dib-edit]').hide();element.find('[dib-view]').show();$event.stopPropagation();$event.preventDefault();};$scope.cleanRow = function ($event, model, $form) {$form.$setDirty(false);dibForm.clean($form,model);$event.stopPropagation();$event.preventDefault();};$scope.rowEdit = function (element) {$element.find('[dib-inline-edit=open]').trigger('editClose');var $rowElement = $(element).find('[dib-inline-edit]');if ($rowElement.length > 0) {$rowElement.trigger('edit');$rowElement.removeClass('md-accent');}
var $rowElement =$rowElement.parents('[dib-inline-edit=add-mode]');if ($rowElement.length>0) {$rowElement.trigger('addRow');}};$scope.itemAliasData = function () {if (!!$scope.lastSelectedItem == false) return null;var itemSelected = dibRecord.primaryKeyData($scope.primaryKeys, $scope.lastSelectedItem);angular.extend(itemSelected, dibRecord.getDataFromSelected($scope, $scope.lastSelectedItem, true).recordData);return itemSelected;};$scope.scrollConfig = {autoHideScrollbar: false,theme: 'light',advanced:{updateOnContentResize: true},setHeight: 200,scrollInertia: 0};$scope.createRecord = function (data) {$scope.loadingData = true;return dibCrud.create($scope, crudController,'dibtestConsultantGrid', {data : data}).then(function () {$scope.page.number = 1;loadGrid();return $q.when();}, function () {$scope.loadingData = false;return $q.reject();});};$scope.updateRecord = function (data) {$scope.loadingData = true;var primaryKeyData = dibRecord.primaryKeyData($scope.primaryKeys, data.recordData);return dibCrud.update($scope, crudController,'dibtestConsultantGrid',{primaryKeyData : primaryKeyData,data : data,createParams: "{}"}).then(function (data) {$scope.loadingData = false;return $q.resolve();}, function (data) {$scope.loadingData = false;return $q.reject(data);});};$scope.deleteRecord = function (data) {$scope.loadingData = true;var primaryKeyData = dibRecord.primaryKeyData($scope.primaryKeys, data);return dibCrud.delete($scope,crudController,'dibtestConsultantGrid',data,$scope.primaryKeys).then(function () {$scope.page.number = 1;loadGrid();});};var deleteSelectedRecords = function () {if ($scope.selectedItems.length > 0) {$scope.loadingData = true;var selectedRecord =  $scope.selectedItems.pop();var primaryKeyData = dibRecord.primaryKeyData($scope.primaryKeys, selectedRecord);dibCrud.delete($scope,crudController,'dibtestConsultantGrid',{primaryKeyData : primaryKeyData}).then(function (data) {deleteSelectedRecords();return $q.resolve();}, function (data) {deleteSelectedRecords();return $q.reject(data);});} else if ($scope.loadingData) {loadGrid();}};$scope.deleteSelected = function() {dibMessage.confirm({title: 'Delete selected records',text : 'Warning - are you sure you want to permanently delete all the selected records?'}).then(function () {deleteSelectedRecords();});};$scope.page = {count : 0,limit : 10,number : 1};$scope.nextPage = function () {$scope.page.number++;};$scope.lastPage = function () {$scope.page.number = $scope.page.count;};$scope.firstPage = function () {$scope.page.number = 1;};$scope.previousPage = function () {$scope.page.number--;};$scope.$watch("page.limit", function () {$scope.page.number = 1;if (!!$scope.gridData) loadGrid();});$scope.$watch("page.number", function () {if (!!$scope.gridData) loadGrid();});$scope.gridOptions.enableFiltering = true;dibGrid.applyFilterOnUrl($scope, "dibtestConsultantGrid");dibGrid.applySortOnUrl($scope, "dibtestConsultantGrid");$scope.reloadContainer  = function (options) {dibGrid.applyFilterOnUrl($scope, "dibtestConsultantGrid");dibGrid.applySortOnUrl($scope, "dibtestConsultantGrid");loadGrid();};};ctrl.$postLink = function () {$scope.reloadContainer({ force : true });};function loadGrid() {$scope.loadingData = true;dibCrud.list($scope, $element, crudController,'dibtestConsultantGrid',$scope.page, $scope.search, null, $scope.gridOptions.sortFields).then(function (data) {$scope.selectedItems = [];$scope.lastSelectedItem = null;var arraySelected = [];$scope.page.count = Math.ceil(data.filtertotal / $scope.page.limit, 10);$scope.page.records = data.filtertotal;$scope.page.totalRecords = data.total;$scope.page.fromRecord = $scope.page.number==1? 1 : ($scope.page.number-1)*$scope.page.limit;$scope.page.toRecord = $scope.page.fromRecord==1? $scope.page.fromRecord + data.records.length - 1 : $scope.page.fromRecord + data.records.length;if ($scope.page.fromRecord == 1 && data.records.length ==0 ) {$scope.page.fromRecord = 0;}
if ($scope.page.number != 1 && data.records.length ==0) {loadGrid();$scope.page.number --;return;}
$scope.loadingData = false;$scope.gridData = data.records;$scope.$broadcast('load');$timeout(function () {$('[dib-container=dibtestConsultantGrid]').find('[select-default]').trigger('refreshDefault');},100);}, function (error) {$scope.loadingData = false;});};}})();