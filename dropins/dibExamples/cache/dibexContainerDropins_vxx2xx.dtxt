
<div
component-loaded
dib-container=dibexContainerDropins dib-container-name="7161" dib-config="{
}" layout-fill flex>
    <md-progress-linear component-loaded md-mode="indeterminate" ng-if="loadingData" class="dib-data-loading"></md-progress-linear>
    <md-tabs id="ci155465" md-selected="selectedIndex" md-swipe-content='false' md-autoselect=false 
    md-tabs-dummy-wrapper='ci155465'
    aria-label="tabpanel"
can-be-moved=true
 can-have-children=true
flex="none"
md-no-select-click md-dynamic-height class=" md-primary" md-align-tabs="top" md-border-bottom  md-autoselect
style="    "
    id='ci155465'
aria-label="tabpanel"
dib-container-name='dibexContainerDropins'
dib-config="{
     defaults : {autoHeight: true, autoScroll : true, padding : 5},
    listeners : {
    }
}"
>
    <md-tab label='Grids' tabId="155466" 
        aria-label="colGrids"
can-be-moved=true
 can-have-children=true
 on-move-refresh-preview=true
flex="none"
flex layout-fill
style="   padding:10px !important; "
    >   <md-tab-body flex layout-fill>
<div dib-inject-content="replace" layout='column'
    aria-label="colGrids"
can-be-moved=true
 can-have-children=true
 on-move-refresh-preview=true
flex="none"
style="   padding:10px !important; "
                on-inject='dibGlobals.action.ActivateTab?containerName=dibexContainerDropins&itemId=155466'    
    id='ci155466'
aria-label="colGrids"
dib-container-name='dibexContainerDropins'
dib-config="{
    listeners : {
    }
}"
>
    <span aria-label="comment31"
can-be-moved=true
 on-move-refresh-preview=true
flex="none"
style="    "
    id='ci155469'
aria-label="comment31"
dib-container-name='dibexContainerDropins'
dib-config="{
    listeners : {
    }
}"
>
    <p style="border:1px; border-style:solid; border-color:#00137F; padding: 1em; background-color: #FFF9E0">
    A Dropinbase application consists of containers that are loaded into one another, either via ports or subcontainers.<br>Each container is configured to use a certain <b>display dropin</b> which determines the Template Controller that is called to create the view.<br>This in turn affects the functionality and features of that container and the type of components which can be used in the main body of the container, eg. md-tabs can't be used as a grid column.<br>Certain display dropin types can be configured to use different types of <b>models</b> which determines the type of datasource (CRUD class that will be generated) - see below for more info.<br>The various available container types are provided here. Use the Designer to examine their design (mainly the Configuration and Layout tabs).
    </p>    
</span>
    <span aria-label="headdibGrid"
can-be-moved=true
 on-move-refresh-preview=true
flex="none"
style="    "
    id='ci155471'
aria-label="headdibGrid"
dib-container-name='dibexContainerDropins'
dib-config="{
     margins : '10 0 0 5',
    listeners : {
    }
}"
>
    <span style="font-size:20px">dibGrid</span>
</span>
    <span aria-label="commentdibGrid2"
can-be-moved=true
 on-move-refresh-preview=true
flex="none"
style="    "
    id='ci155472'
aria-label="commentdibGrid2"
dib-container-name='dibexContainerDropins'
dib-config="{
    listeners : {
    }
}"
>
    <p style="border:1px; border-style:solid; border-color:#00137F; padding: 1em; background-color: #FFF9E0">
    The dibGrid container dropin presents data in rows and columns.<br>
The fields/components used as columns in grid containers are placed under a contentFor component named 'columns'.<br>Normally a toolbar with buttons is placed above the contentFor component... but any conceivable design is theoretically possible.<br>
Note certain components, eg btnGridEdit and btnFilterApply can only be used in context of a grid.<br>
The dibGrid dropin has 2 different available <b>models</b>, demonstrated below.
    </p>    
</span>
    <span aria-label="headTableGrid"
can-be-moved=true
 on-move-refresh-preview=true
flex="none"
style="    "
    id='ci155473'
aria-label="headTableGrid"
dib-container-name='dibexContainerDropins'
dib-config="{
     margins : '10 0 0 5',
    listeners : {
    }
}"
>
    <span style="font-size:16px"><b>Model = Table</b></span>
</span>
    <span aria-label="commentTableGrid"
can-be-moved=true
 on-move-refresh-preview=true
flex="none"
style="    "
    id='ci155475'
aria-label="commentTableGrid"
dib-container-name='dibexContainerDropins'
dib-config="{
    listeners : {
    }
}"
>
    <p style="border:1px; border-style:solid; border-color:#00137F; padding: 1em; background-color: #FFF9E0">
    The record source is a single table. Users can edit data in the grid by double-clicking cells.<br>
Note, fields from other (joined) tables can be included, and if they are from parent tables, they can be updated.<br>See <a href="/nav/dibDocs?id=225&text=dibGrid%20-%20Table">dibGrid-Table</a> for more info.
    </p>    
</span>
   <div layout-fill   
        aria-label="dibtestConsultantGrid"
can-be-moved=true
flex="none"
style=" height:450px !important; overflow:auto !important;   "
        id='ci155467'
aria-label="dibtestConsultantGrid"
dib-container-name='dibexContainerDropins'
dib-config="{
    listeners : {
    }
}"
        dib-injected-success=true
        fill-height-for-child
        >
        <dibtest-consultant-grid
            dib-subcontainer-loaded
            dib-subcontainer=true
            layout-fill        
        >
        </dibtest-consultant-grid>
    </div>
    <span aria-label="headSqlGrid"
can-be-moved=true
 on-move-refresh-preview=true
flex="none"
style="    "
    id='ci155474'
aria-label="headSqlGrid"
dib-container-name='dibexContainerDropins'
dib-config="{
     margins : '10 0 0 5',
    listeners : {
    }
}"
>
    <span style="font-size:16px"><b>Model = Sql</b></span>
</span>
    <span aria-label="commentSqlGrid"
can-be-moved=true
 on-move-refresh-preview=true
flex="none"
style="    "
    id='ci155476'
aria-label="commentSqlGrid"
dib-container-name='dibexContainerDropins'
dib-config="{
    listeners : {
    }
}"
>
    <p style="border:1px; border-style:solid; border-color:#00137F; padding: 1em; background-color: #FFF9E0">
    Based on a sql statement in pef_sql.<br>Use the Designer to drag-and-drop fields from the Field List.<br>Note the use of the sqlText component in the designer to display values.<br>Navigation links can be configured (see Parent Company below) by using the sqlTextDisplayValue component with a value in pef_port_id. The SQL statement must also have a foreignkey field, eg parent_company,
 and another field with the same name and "_display_value" as suffix, in this example parent_company_display_value.<br>See <a href="/nav/dibDocs?id=219&text=dibGrid%20-%20Sql">dibGrid-Sql</a> for more info.
    </p>    
</span>
   <div layout-fill   
        aria-label="testCompanySqlRpt_grid"
can-be-moved=true
flex="none"
style=" height:450px !important; overflow:auto !important;   "
        id='ci155468'
aria-label="testCompanySqlRpt_grid"
dib-container-name='dibexContainerDropins'
dib-config="{
    listeners : {
    }
}"
        dib-injected-success=true
        fill-height-for-child
        >
        <dibtest-company-sql-rpt-grid
            dib-subcontainer-loaded
            dib-subcontainer=true
            layout-fill        
        >
        </dibtest-company-sql-rpt-grid>
    </div>
</div>
        </md-tab-body>
    </md-tab>
    <md-tab label='Generic Containers & Forms' tabId="155486" 
        aria-label="colGenericAndForms"
can-be-moved=true
 can-have-children=true
 on-move-refresh-preview=true
flex
flex layout-fill
style="width:100% !important;   padding:10px !important; "
    >   <md-tab-body flex layout-fill>
<div dib-inject-content="replace" layout='column'
    aria-label="colGenericAndForms"
can-be-moved=true
 can-have-children=true
 on-move-refresh-preview=true
flex
style="width:100% !important;   padding:10px !important; "
                on-inject='dibGlobals.action.ActivateTab?containerName=dibexContainerDropins&itemId=155486'    
    id='ci155486'
aria-label="colGenericAndForms"
dib-container-name='dibexContainerDropins'
dib-config="{
    listeners : {
    }
}"
>
    <span aria-label="headdibContainer"
can-be-moved=true
 on-move-refresh-preview=true
flex="none"
style="    "
    id='ci155487'
aria-label="headdibContainer"
dib-container-name='dibexContainerDropins'
dib-config="{
     margins : '10 0 0 5',
    listeners : {
    }
}"
>
    <span style="font-size:20px">dibContainer</span>
</span>
    <span aria-label="commentdibContainerFacts"
can-be-moved=true
 on-move-refresh-preview=true
flex="none"
style="    "
    id='ci155489'
aria-label="commentdibContainerFacts"
dib-container-name='dibexContainerDropins'
dib-config="{
    listeners : {
    }
}"
>
    <p style="border:1px; border-style:solid; border-color:#00137F; padding: 1em; background-color: #FFF9E0">
    This container dropin is useful for functional purposes that do not require a datasource, eg base containers or dashboards.
    </p>    
</span>
   <div layout-fill   
        aria-label="testdibContainer"
can-be-moved=true
item-alias="testdibContainer"   
    ng-show="!!view.testdibContainer == false || view.testdibContainer.visible" 
    dib-disable="{{view.testdibContainer.disabled}}"
    ng-class="view.testdibContainer.class" 
    ng-style="view.testdibContainer.style"
flex="none"
style="width:100% !important; height:240px !important; overflow:auto !important;   "
        id='ci155492'
aria-label="testdibContainer"
dib-container-name='dibexContainerDropins'
dib-config="{
     submitLastRecord : 'subCompanyConsult',
    listeners : {
    }
}"
        dib-injected-success=true
        fill-height-for-child
        >
        <dibtestdib-container
            dib-subcontainer-loaded
            dib-subcontainer=true
            layout-fill        
        >
        </dibtestdib-container>
    </div>
    <span aria-label="headdibForm"
can-be-moved=true
 on-move-refresh-preview=true
flex="none"
style="    "
    id='ci155490'
aria-label="headdibForm"
dib-container-name='dibexContainerDropins'
dib-config="{
     margins : '10 0 0 5',
    listeners : {
    }
}"
>
    <span style="font-size:20px">dibForm</span>
</span>
    <span aria-label="comment311"
can-be-moved=true
 on-move-refresh-preview=true
flex="none"
style="    "
    id='ci155488'
aria-label="comment311"
dib-container-name='dibexContainerDropins'
dib-config="{
    listeners : {
    }
}"
>
    <p style="border:1px; border-style:solid; border-color:#00137F; padding: 1em; background-color: #FFF9E0">
    dibForm is used to display single records, mostly for editing purposes.<br>Any filters that are applied, on the form container or any subcontainer component that hosts it, will limit the available records.<br>Use the navigation buttons to move between records.
    </p>    
</span>
<div layout='column' layout-fill flex>
    <md-toolbar class="md-theme-light">
            <h2 class="md-toolbar-tools">
                <span>Test Consultant Form</span>
            </h2>
    </md-toolbar>   <div layout-fill   
        aria-label="subConsult"
can-be-moved=true
item-alias="subConsult"   
    ng-show="!!view.subConsult == false || view.subConsult.visible" 
    dib-disable="{{view.subConsult.disabled}}"
    ng-class="view.subConsult.class" 
    ng-style="view.subConsult.style"
flex="none"
style="width:100% !important; height:400px !important; overflow:auto !important;   "
        id='ci155491'
aria-label="subConsult"
dib-container-name='dibexContainerDropins'
dib-config="{
     submitLastRecord : 'subCompanyConsult',
    listeners : {
    }
}"
        dib-injected-success=true
        fill-height-for-child
        >
        <dibtest-consultant-form
            dib-subcontainer-loaded
            dib-subcontainer=true
            layout-fill        
        >
        </dibtest-consultant-form>
    </div>
</div>
</div>
        </md-tab-body>
    </md-tab>
    <md-tab label='Html' tabId="155493" 
        aria-label="colHtml"
can-be-moved=true
 can-have-children=true
 on-move-refresh-preview=true
flex
flex layout-fill
style="width:100% !important;   padding:10px !important; "
    >   <md-tab-body flex layout-fill>
<div dib-inject-content="replace" layout='column'
    aria-label="colHtml"
can-be-moved=true
 can-have-children=true
 on-move-refresh-preview=true
flex
style="width:100% !important;   padding:10px !important; "
                on-inject='dibGlobals.action.ActivateTab?containerName=dibexContainerDropins&itemId=155493'    
    id='ci155493'
aria-label="colHtml"
dib-container-name='dibexContainerDropins'
dib-config="{
    listeners : {
    }
}"
>
    <span aria-label="headdibHtmlTemplate"
can-be-moved=true
 on-move-refresh-preview=true
flex="none"
style="    "
    id='ci155497'
aria-label="headdibHtmlTemplate"
dib-container-name='dibexContainerDropins'
dib-config="{
     margins : '10 0 0 5',
    listeners : {
    }
}"
>
    <span style="font-size:20px">Html Template</span>
</span>
    <span aria-label="commentHtmlTemplate"
can-be-moved=true
 on-move-refresh-preview=true
flex="none"
style="    "
    id='ci155498'
aria-label="commentHtmlTemplate"
dib-container-name='dibexContainerDropins'
dib-config="{
    listeners : {
    }
}"
>
    <p style="border:1px; border-style:solid; border-color:#00137F; padding: 1em; background-color: #FFF9E0">
    Processes and displays an Eleutheria HTML template.<br>Eleutheria is a powerful and flexible templating engine that incorporates coding principles (eg loops and conditions) to produce results.<br>Eleutheria aims to be safe by default, but as with any programming language, the wrong use can lead to security vulnerabilities - consult docs for more info.
    </p>    
</span>
    <span aria-label="commentHtmlTemplate1"
can-be-moved=true
 on-move-refresh-preview=true
flex="none"
style="    "
    id='ci183049'
aria-label="commentHtmlTemplate1"
dib-container-name='dibexContainerDropins'
dib-config="{
    listeners : {
    }
}"
>
    <p style="border:1px; border-style:solid; border-color:#00137F; padding: 1em; background-color: #FFF9E0">
    The actual HTML template can be stored in any dropin folder. Store the last part of the physical path in the <i>pef_container.template</i> field, eg /myDropin/reports/scores.html<br>The <i>pef_container.valid_params</i> field is used to specify which client fields are valid global merge fields that may be used in the template.<br>For each parameter, a default value can be specified, or '*required*' can be used to indicate that the user must provide a value before the template can be rendered.<br>dibUser_ parameters (field values from the login table, eg dibUser_first_name) are also available (if specified in <i>valid_params)</i>.<br>Parameter values are sanitized to allow only the following characters by default: a-zA-Z0-9_ and space.<br>To override, use a container setting record with name = 'GlobalsReplaceList' and value being a regular expression eg #[^a-zA-Z]*#.<br>Note, using an expression specifying a whitelist as above, is far more secure than using a blacklist!
    </p>    
</span>
    <span aria-label="htmllabel"
can-be-moved=true
 on-move-refresh-preview=true
flex="none"
style="    "
    id='ci155501'
aria-label="htmllabel"
dib-container-name='dibexContainerDropins'
dib-config="{
    listeners : {
    }
}"
>
    Selecting a value refreshes the dibHtmlTemplate container below
</span>
    <div layout='row' aria-label="companyId"
can-be-moved=true
item-alias="companyId"   
    ng-show="!!view.companyId == false || view.companyId.visible" 
    dib-disable="{{view.companyId.disabled}}"
    ng-class="view.companyId.class" 
    ng-style="view.companyId.style"
flex="none"
style="width:220px !important;    "
dib-help='
    '
dib-help-url='/nav/dibDocs?id=dibTableForm*1441&text=test_company_consultant'
 >
<md-autocomplete 
    flex
    dib-onload-service 
    has-store="true"
    data-item-alias-location="parentElement"
    md-input-name='test_company_id'
    select-model="model.selected___test_company_id.id"
    md-search-text-change="loadServiceciid(dropdowns.service155500.searchTextmodel)"
    md-search-text="dropdowns.service155500.searchTextmodel"
    md-selected-item="model.selected___test_company_id"
    md-item-text="item.id_display_value"
    md-delay="700"
    md-items="item in dropdowns.service155500.getItems(dropdowns.service155500.searchTextmodel,'model')"
    md-floating-label=""
    md-no-cache="true"
    md-selected-item-change="select155500(model,'model','test_company_id')"
    md-select-on-match="true"
    md-min-length="0"
    dib-data-component='autocomplete'
    placeholder=""
    id='ci155500'
    aria-label="companyId"
    dib-container-name='dibexContainerDropins'
    dib-config="{
        listeners : {
    'change___dib*lsjymq5r7' : function(field, additionalInfoOnEvent) { 
        element.trigger('enableDependency', ['change' , 'subHtmlReport' , additionalInfoOnEvent]);    
     } 
        }
    }"
    dib-enable-dependency-scope='md-autocomplete-wrap'   
    dib-enable-dependency-scope-object='selectedItem'
>
    <md-item-template>
        <span md-highlight-text="dropdowns.service155500.searchText">{{item.id_display_value}}</span>
    </md-item-template>
    <md-not-found>No matches found.</md-not-found>
    <div ng-messages="dibexContainerDropins.test_company_id.$error" ng-if="dibexContainerDropins.test_company_id.$touched">
    </div>
</md-autocomplete>
</div>
   <div layout-fill  flex 
        aria-label="subHtmlReport"
can-be-moved=true
item-alias="subHtmlReport"   
    ng-show="!!view.subHtmlReport == false || view.subHtmlReport.visible" 
    dib-disable="{{view.subHtmlReport.disabled}}"
    ng-class="view.subHtmlReport.class" 
    ng-style="view.subHtmlReport.style"
flex
style="width:100% !important;    "
        id='ci155499'
aria-label="subHtmlReport"
dib-container-name='dibexContainerDropins'
dib-config="{
    listeners : {
    }
}"
        dib-injected-success=true
        >
        <dibtest-company-e-t-report
            dib-subcontainer-loaded
            dib-subcontainer=true
            layout-fill        
        >
        </dibtest-company-e-t-report>
    </div>
</div>
        </md-tab-body>
    </md-tab>
    <md-tab label='Trees' tabId="155507" 
        aria-label="colTrees"
can-be-moved=true
 can-have-children=true
 on-move-refresh-preview=true
flex
flex layout-fill
style="width:100% !important;   padding:10px !important; "
    >   <md-tab-body flex layout-fill>
<div dib-inject-content="replace" layout='column'
    aria-label="colTrees"
can-be-moved=true
 can-have-children=true
 on-move-refresh-preview=true
flex
style="width:100% !important;   padding:10px !important; "
                on-inject='dibGlobals.action.ActivateTab?containerName=dibexContainerDropins&itemId=155507'    
    id='ci155507'
aria-label="colTrees"
dib-container-name='dibexContainerDropins'
dib-config="{
    listeners : {
    }
}"
>
    <span aria-label="headdibTree"
can-be-moved=true
 on-move-refresh-preview=true
flex="none"
style="    "
    id='ci155511'
aria-label="headdibTree"
dib-container-name='dibexContainerDropins'
dib-config="{
     margins : '10 0 0 5',
    listeners : {
    }
}"
>
    <span style="font-size:20px">dibTree</span>
</span>
    <span aria-label="comment31211"
can-be-moved=true
 on-move-refresh-preview=true
flex="none"
style="    "
    id='ci155512'
aria-label="comment31211"
dib-container-name='dibexContainerDropins'
dib-config="{
    listeners : {
    }
}"
>
    <p style="border:1px; border-style:solid; border-color:#00137F; padding: 1em; background-color: #FFF9E0">
    Data in dibTree cannot be changed, other than delete or drag and drop to arrange items.<br>Actions are performed on selected items. The Ctrl-key can be used to select multiple items.<br>If two trees are present, items can be dragged between them (try dragging nodes between the two trees below).<br>
Since implementations of trees are specific the PHP controller functions need to be customized.<br>
The controller is set in the <i>crud_store_controller</i> field of the container.<br>
Developers can copy the /dropins/dibExamples/TreeController.php file provided and adjust as needed.<br><br>
<br><b>Note,</b> in both tree examples below, drag-and-drop actions will have no effect other than informing the user of the action that took place. Adapt the PHP code according to the desired business logic.<br>
    </p>    
</span>
   <div layout-fill  flex 
        aria-label="tree"
can-be-moved=true
flex
style="    "
        id='ci155513'
aria-label="tree"
dib-container-name='dibexContainerDropins'
dib-config="{
    listeners : {
    }
}"
        dib-injected-success=true
        >
        <dibtest-tree
            dib-subcontainer-loaded
            dib-subcontainer=true
            layout-fill        
        >
        </dibtest-tree>
    </div>
    <span aria-label="headdibTree2"
can-be-moved=true
 on-move-refresh-preview=true
flex="none"
style="    "
    id='ci179985'
aria-label="headdibTree2"
dib-container-name='dibexContainerDropins'
dib-config="{
     margins : '10 0 0 5',
    listeners : {
    }
}"
>
    <span style="font-size:20px">dibHorizontalTree</span>
</span>
    <span aria-label="comment312111"
can-be-moved=true
 on-move-refresh-preview=true
flex="none"
style="    "
    id='ci179984'
aria-label="comment312111"
dib-container-name='dibexContainerDropins'
dib-config="{
    listeners : {
    }
}"
>
    <p style="border:1px; border-style:solid; border-color:#00137F; padding: 1em; background-color: #FFF9E0">
    The Horizontal Tree supports the drag-and-drop action internally as well as to other trees. The tree below is based on the same crud controller as the first tree.
<b>NOTE:</b> on some systems the tree may not initially display items until the user clicks the Search button (will be fixed in the next version).
    </p>    
</span>
   <div layout-fill   
        aria-label="dibtestHorTree"
can-be-moved=true
flex="none"
style=" height:200px !important; overflow:auto !important;   "
        id='ci179983'
aria-label="dibtestHorTree"
dib-container-name='dibexContainerDropins'
dib-config="{
    listeners : {
    }
}"
        dib-injected-success=true
        fill-height-for-child
        >
        <dibtest-hor-tree
            dib-subcontainer-loaded
            dib-subcontainer=true
            layout-fill        
        >
        </dibtest-hor-tree>
    </div>
</div>
        </md-tab-body>
    </md-tab>
    <md-tab label='Charts' tabId="155480" 
        aria-label="colCharts"
can-be-moved=true
 can-have-children=true
 on-move-refresh-preview=true
flex
flex layout-fill
style="width:100% !important;   padding:10px !important; "
    >   <md-tab-body flex layout-fill>
<div dib-inject-content="replace" layout='column'
    aria-label="colCharts"
can-be-moved=true
 can-have-children=true
 on-move-refresh-preview=true
flex
style="width:100% !important;   padding:10px !important; "
                on-inject='dibGlobals.action.ActivateTab?containerName=dibexContainerDropins&itemId=155480'    
    id='ci155480'
aria-label="colCharts"
dib-container-name='dibexContainerDropins'
dib-config="{
    listeners : {
    }
}"
>
   <div layout-fill  flex 
        aria-label="subChartJs"
can-be-moved=true
item-alias="subChartJs"   
    ng-show="!!view.subChartJs == false || view.subChartJs.visible" 
    dib-disable="{{view.subChartJs.disabled}}"
    ng-class="view.subChartJs.class" 
    ng-style="view.subChartJs.style"
flex
style="    "
        id='ci155484'
aria-label="subChartJs"
dib-container-name='dibexContainerDropins'
dib-config="{
    listeners : {
    }
}"
        dib-injected-success=true
        >
        <dibex-sub-chart-js-html
            dib-subcontainer-loaded
            dib-subcontainer=true
            layout-fill        
        >
        </dibex-sub-chart-js-html>
    </div>
</div>
        </md-tab-body>
    </md-tab>
    <md-tab label='Calendar' tabId="155502" 
        aria-label="colCalendar"
can-be-moved=true
 can-have-children=true
 on-move-refresh-preview=true
flex
flex layout-fill
style="width:100% !important;   padding:10px !important; "
    >   <md-tab-body flex layout-fill>
<div dib-inject-content="replace" layout='column'
    aria-label="colCalendar"
can-be-moved=true
 can-have-children=true
 on-move-refresh-preview=true
flex
style="width:100% !important;   padding:10px !important; "
                on-inject='dibGlobals.action.ActivateTab?containerName=dibexContainerDropins&itemId=155502'    
    id='ci155502'
aria-label="colCalendar"
dib-container-name='dibexContainerDropins'
dib-config="{
    listeners : {
    }
}"
>
    <span aria-label="headQuickFacts1"
can-be-moved=true
 on-move-refresh-preview=true
flex="none"
style="    "
    id='ci155503'
aria-label="headQuickFacts1"
dib-container-name='dibexContainerDropins'
dib-config="{
     margins : '10 0 0 5',
    listeners : {
    }
}"
>
    coming soon...
</span>
</div>
        </md-tab-body>
    </md-tab>
</md-tabs>
</div>
