(function () {
    //Define ons die app vir die container
    var testCalendar = angular.module('testCalendar', []);
    testCalendar.factory('calendarService', ['$log','$q', function ($log, $q) {
        return {
            toggleCheckedIn : function (shiftId, teamId, date, employeeId) {
                $log.log(arguments);
            },
            addEmployeeTmpToShift : function (shiftId, employeeId, date) {
                $log.log(arguments);
            },
            getAllEmployees : function () {
                var defer = $q.defer();
                setTimeout(function () {
                    defer.resolve([{
                        Id: 1,
                        Name: "Amanda Jansen van Vuuren",
                        Avatar: "img/avatars/default-avatar-1.png",
                        CheckedIn: true
                    },{
                        Id: 2,
                        Name: "Lariska Bothma",
                        Avatar: "img/avatars/default-avatar-2.png",
                        CheckedIn: true
                    },{
                        Id: 9,
                        Name: "Robert Steynberg",
                        Avatar: "img/avatars/default-avatar-9.png",
                        CheckedIn: true
                    },{
                        Id: 3,
                        Name: "Claudia Steynberg",
                        Avatar: "img/avatars/default-avatar-3.png",
                        CheckedIn: true
                    },{
                        Id: 4,
                        Name: "Rico Koen",
                        Avatar: "img/avatars/default-avatar-4.png",
                        CheckedIn: true
                    },{
                        Id: 5,
                        Name: "Francois De Wet",
                        Avatar: "img/avatars/default-avatar-5.png",
                        CheckedIn: true
                    },{
                        Id: 6,
                        Name: "Erik Kruger",
                        Avatar: "img/avatars/default-avatar-6.png",
                        CheckedIn: true
                    },{
                        Id: 7,
                        Name: "Pieter van Niekerk",
                        Avatar: "img/avatars/default-avatar-7.png",
                        CheckedIn: true
                    },{
                        Id: 8,
                        Name: "Cobus Coetsee",
                        Avatar: "img/avatars/default-avatar-8.png",
                        CheckedIn: true
                    }]);
                }, 2000);
                return defer.promise;
            },
            data : function (selectedDate) {
                var defer = $q.defer();
                setTimeout(function () {
                    var daysArray = [];
                    var allEployees = [{
                        Id: 1,
                        Name: "Amanda Jansen van Vuuren",
                        Avatar: "img/avatars/default-avatar-1.png",
                        CheckedIn: true
                    },{
                        Id: 2,
                        Name: "Lariska Bothma",
                        Avatar: "img/avatars/default-avatar-2.png",
                        CheckedIn: true
                    },{
                        Id: 3,
                        Name: "Claudia Steynberg",
                        Avatar: "img/avatars/default-avatar-3.png",
                        CheckedIn: true
                    },{
                        Id: 4,
                        Name: "Rico Koen",
                        Avatar: "img/avatars/default-avatar-4.png",
                        CheckedIn: true
                    },{
                        Id: 5,
                        Name: "Francois De Wet",
                        Avatar: "img/avatars/default-avatar-5.png",
                        CheckedIn: true
                    },{
                        Id: 6,
                        Name: "Erik Kruger",
                        Avatar: "img/avatars/default-avatar-6.png",
                        CheckedIn: true
                    },{
                        Id: 7,
                        Name: "Pieter van Niekerk",
                        Avatar: "img/avatars/default-avatar-7.png",
                        CheckedIn: true
                    },{
                        Id: 8,
                        Name: "Cobus Coetsee",
                        Avatar: "img/avatars/default-avatar-8.png",
                        CheckedIn: true
                    },{
                        Id: 9,
                        Name: "Robert Steynberg",
                        Avatar: "img/avatars/default-avatar-9.png",
                        CheckedIn: true
                    }];
                    for (var i = 0; i <= 6; i++) {
                        var date = new Date(selectedDate) || new Date();
                        var d = date.setDate(date.getDate() + i);
                        daysArray.push({
                            Date : d,
                            Shifts : [{
                                ShiftId : 1,
                                Team: {
                                    Id: 1,
                                    Label: 'Team A'
                                },
                                ShiftName : 'Night Shift',
                                TimeFrom: 0, //hour index, 0 based
                                TimeTo: 4,
                                Duration: 5, //in hours allows for .5 hours
                                Employees : (function () {
                                    var tempArray = [];
                                    var testArray = [];
                                    while (tempArray.length < 3) {
                                        var random = Math.floor(Math.random()*(allEployees.length-1));
                                        var employee = allEployees[random];
                                        if (testArray.indexOf(employee.Id) === -1) {
                                            tempArray.push(employee);
                                            testArray.push(employee.Id);
                                        }
                                    }
                                    return tempArray;
                                })()
                            },{
                                ShiftId : 2,
                                Team: {
                                    Id: 2,
                                    Label: 'Team B'
                                },
                                ShiftName : 'Morning Shift',
                                TimeFrom: 5, //hour index, 0 based
                                TimeTo: 12,
                                Duration: 8, //in hours allows for .5 hours
                                Employees : (function () {
                                    var tempArray = [];
                                    var testArray = [];
                                    while (tempArray.length < 3) {
                                        var random = Math.floor(Math.random()*(allEployees.length-1));
                                        var employee = allEployees[random];
                                        if (testArray.indexOf(employee.Id) === -1) {
                                            tempArray.push(employee);
                                            testArray.push(employee.Id);
                                        }
                                    }
                                    return tempArray;
                                })()
                            },{
                                ShiftId : 3,
                                Team: {
                                    Id: 3,
                                    Label: 'Team C'
                                },
                                ShiftName : 'Afternoon Shift',
                                TimeFrom: 13, //hour index, 0 based
                                TimeTo: 20,
                                Duration: 8, //in hours allows for .5 hours
                                Employees : (function () {
                                    var tempArray = [];
                                    var testArray = [];
                                    while (tempArray.length < 3) {
                                        var random = Math.floor(Math.random()*(allEployees.length-1));
                                        var employee = allEployees[random];
                                        if (testArray.indexOf(employee.Id) === -1) {
                                            tempArray.push(employee);
                                            testArray.push(employee.Id);
                                        }
                                    }
                                    return tempArray;
                                })()
                            },{
                                ShiftId : 1,
                                Team: {
                                    Id: 1,
                                    Label: 'Team A'
                                },
                                ShiftName : 'Night Shift',
                                TimeFrom: 21, //hour index, 0 based
                                TimeTo: 23,
                                Duration: 3, //in hours allows for .5 hours
                                Employees : (function () {
                                    var tempArray = [];
                                    var testArray = [];
                                    while (tempArray.length < 3) {
                                        var random = Math.floor(Math.random()*(allEployees.length-1));
                                        var employee = allEployees[random];
                                        if (testArray.indexOf(employee.Id) === -1) {
                                            tempArray.push(employee);
                                            testArray.push(employee.Id);
                                        }
                                    }
                                    return tempArray;
                                })()
                            }]
                        });
                    }
                    defer.resolve(daysArray);
                },2000);
                return defer.promise;
            },
            cleanData : function (data) {
                angular.forEach(data, function (days, i) {
                    angular.forEach(days.Shifts, function (shift, j) {
                        var timeFromCls = shift.TimeFrom;
                        var durationCls = shift.Duration;
                        var timeLabels  = {
                            To: (function () {
                                if (shift.TimeTo < 10) {
                                    return "0"+shift.TimeTo+":00am";
                                } else {
                                    if (shift.TimeTo < 12) {
                                        return shift.TimeTo+":00am";
                                    } else {
                                        return shift.TimeTo+":00pm";
                                    }
                                }
                            })(),
                            From: (function () {
                                if (shift.TimeFrom < 10) {
                                    return "0"+shift.TimeFrom+":00am";
                                } else {
                                    if (shift.TimeFrom < 12) {
                                        return shift.TimeFrom+":00am";
                                    } else {
                                        return shift.TimeFrom+":00pm";
                                    }
                                }
                            })()
                        };
                        if (shift.TimeFrom % 1 !== 0) {
                            timeFromCls = parseInt(shift.TimeFrom) + "-30";
                            timeLabels.From = (function () {
                                if (shift.TimeFrom < 10) {
                                    return "0"+shift.TimeFrom+":30am";
                                } else {
                                    if (shift.TimeFrom < 12) {
                                        return shift.TimeFrom+":30am";
                                    } else {
                                        return shift.TimeFrom+":30pm";
                                    }
                                }
                            })();
                        }
                        if (shift.TimeTo % 1 !== 0) {
                            timeLabels.To = (function () {
                                if (shift.TimeTo < 10) {
                                    return "0"+shift.TimeTo+":30am";
                                } else {
                                    if (shift.TimeTo < 12) {
                                        return shift.TimeTo+":30am";
                                    } else {
                                        return shift.TimeTo+":30pm";
                                    }
                                }
                            })();
                        }
                        if (shift.Duration % 1 !== 0) {
                            durationCls = parseInt(shift.Duration) + "-30";
                        }
                        shift.TimeFromCls = timeFromCls;
                        shift.DurationCls = durationCls;
                        shift.TimeLabels  = timeLabels;
                    });
                });
                return data;
            }
        }
    }]);
})();
(function () {
    //recall ons die container app
    var testCalendar = angular.module('testCalendar');
    var comps = ['']; //A list of all the components required for this container
    testCalendar.component('testCalendar', {
        controllerAs: 'testCalendar',
        templateUrl: enviroment_base_url + '/dropins/setNgMaterial/dibCalendar/Template/view/testCalendar.html',
        component: comps,
        //$canActivate: ['$ocLazyLoad', '$sce', function ($ocLazyLoad, $sce) {
        //    return $ocLazyLoad.load({
        //       module: 'nothing',
        //        files: ['', ''] //need to load all the files required
        //    }).then(function() {
        //        return true;
        //    });
        //}],
        controller: ['$scope', '$ocLazyLoad', '$rootScope', '$log','calendarService', '$element', function ($scope, $ocLazyLoad, $rootScope, $log, calendarService, $element) {
            $scope.calendarSwitchableViews = true;
            $scope.weekView = true;
            $scope.hourList = ['00:00','01:00','02:00','03:00','04:00','05:00','06:00','07:00','08:00','09:00','10:00','11:00','12:00','13:00','14:00','15:00','16:00','17:00','18:00','19:00','20:00','21:00','22:00','23:00'];
            $scope.selectedDate = new Date();
            $scope.overlay = {};
            $scope.employeeArray = [];
            $scope.addEmployee = {
                searchText: "",
                querySearch: function (query) {
                    var results = query ? $scope.employeeArray.filter(function (query) {
                            var lowercaseQuery = angular.lowercase(query);
                            return function filterFn(employee) {
                                return (employee.Name.indexOf(lowercaseQuery) === 0);
                            };
                        }) : $scope.employeeArray,
                        deferred;
                    return results;
                }
            };
            calendarService.getAllEmployees().then(function (data) {
                $scope.employeeArray = data;
            });
            calendarService.data($scope.selectedDate).then(function (data){
                $scope.calendarData = calendarService.cleanData(data);
                $log.log($scope.calendarData);
            });
            $scope.toggleView = function (view) {
                switch (view) {
                    case "toggle":
                        $scope.weekView = !$scope.weekView;
                        break;
                    case "day":
                        $scope.weekView = false;
                        break;
                    case "week":
                        $scope.weekView = true;
                        break;
                    default:
                        break;
                }
            };
            $scope.setToday = function () {
                $scope.selectedDate = new Date();
            };
            $scope.$watch('selectedDate', function() {
                calendarService.data($scope.selectedDate).then(function (data){
                    $scope.calendarData = calendarService.cleanData(data);
                });
            });
            $scope.showOverlay = function (overlayId) {
                $scope.overlay[overlayId] = !$scope.overlay[overlayId];
            };
            $scope.setSelectedShift = function (shift) {
                $scope.selectedShift = shift;
            }
            /**
             * What to do when reloadcontainer is triggered.
             * //Load all the services required.
             * //Check if it is a child item and if settings has to be applied. 
             */
            $scope.reloadContainer = function () { 
                  //load the store
                  $log.log('BOO', $element);
            };
        }]
    });
})();
