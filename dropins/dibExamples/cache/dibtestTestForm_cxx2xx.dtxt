(function() {var require = ['/dropins/setNgMaterial/dibForm/js/component/formPaging.js','/dropins/setNgMaterial/dibGlobals/js/component/timeDatePickerInput.js','/dropins/setNgMaterial/dibForm/js/services/dibForm.js'];require.push('/dropins/setNgMaterial/dibGlobals/js/component/selectDefault.js');var files = [];angular.forEach(require, function (file,index) {var appendChar = file.indexOf("?") == -1 ? "?" : "&";files.push(DIB.base_url+'/files'+file+appendChar+'v='+DIB.load_time);});var dibtestTestForm = angular.module('dibtestTestForm', [files]);dibtestTestForm.service('service194824',service194824);service194824.$inject = ['dibAjax', 'dibDiscover', '$q'];function service194824(dibAjax, dibDiscover, $q) {return {list : list};function list($scope, $element, query, modelType, page) {var url = dibDiscover.updateQueryStringDropdown(DIB.base_url + "/peff/Crud/componentlist/dibtestTestForm?containerItemId=194824", query, modelType, page);var requestInfo = dibDiscover.addToUrl({field :$('#ci194824'),$scope : $scope,container : $element,url : url});return dibAjax.post(requestInfo, {excludeFromCancels : true,factoryResult : function (data) {return data.records;}});};};dibtestTestForm.service('service194825',service194825);service194825.$inject = ['dibAjax', 'dibDiscover', '$q'];function service194825(dibAjax, dibDiscover, $q) {return {list : list};function list($scope, $element, query, modelType, page) {var url = dibDiscover.updateQueryStringDropdown(DIB.base_url + "/peff/Crud/componentlist/dibtestTestForm?containerItemId=194825", query, modelType, page);var requestInfo = dibDiscover.addToUrl({field :$('#ci194825'),$scope : $scope,container : $element,url : url});return dibAjax.post(requestInfo, {excludeFromCancels : true,factoryResult : function (data) {return data.records;}});};};dibtestTestForm.factory('dibtestTestFormDefinition',dibtestTestFormDefinition);dibtestTestFormDefinition.$inject = ['dibContainer','service194824','service194825'];function dibtestTestFormDefinition(dibContainer,service194824,service194825) {return {model : model,view : view,info : info,primaryKeys : primaryKeys};function model() {var model = {};model._GET = {};model['id'] = '';model._GET['id'] = dibContainer.modelItem({key : 'id',dataType : "number",create : false,update : false,service : null,itemAlias : false});model['varchar10_required'] = '';model._GET['varchar10_required'] = dibContainer.modelItem({key : 'varchar10_required',dataType : "text",create : true,update : true,service : null,itemAlias : 'varchar10'});model['has_default'] = '';model._GET['has_default'] = dibContainer.modelItem({key : 'has_default',dataType : "text",create : true,update : true,service : null,itemAlias : false});model['time_stamp'] = '';model._GET['time_stamp'] = dibContainer.modelItem({key : 'time_stamp',dataType : "dateTime",create : true,update : true,service : null,itemAlias : false});model['unique_fld'] = '';model._GET['unique_fld'] = dibContainer.modelItem({key : 'unique_fld',dataType : "text",create : true,update : true,service : null,itemAlias : false});model['nvarchar80'] = '';model._GET['nvarchar80'] = dibContainer.modelItem({key : 'nvarchar80',dataType : "text",create : true,update : true,service : null,itemAlias : false});model['text_fld'] = '';model._GET['text_fld'] = dibContainer.modelItem({key : 'text_fld',dataType : "text",create : true,update : true,service : null,itemAlias : false});model['tinytext_fld'] = '';model._GET['tinytext_fld'] = dibContainer.modelItem({key : 'tinytext_fld',dataType : "text",create : true,update : true,service : null,itemAlias : false});model['mediumtext_fld'] = '';model._GET['mediumtext_fld'] = dibContainer.modelItem({key : 'mediumtext_fld',dataType : "text",create : true,update : true,service : null,itemAlias : false});model['longtext_fld'] = '';model._GET['longtext_fld'] = dibContainer.modelItem({key : 'longtext_fld',dataType : "text",create : true,update : true,service : null,itemAlias : false});model['bit_fld'] = '';model._GET['bit_fld'] = dibContainer.modelItem({key : 'bit_fld',dataType : "text",create : true,update : true,service : null,itemAlias : false});model['tinyint_fld'] = '';model._GET['tinyint_fld'] = dibContainer.modelItem({key : 'tinyint_fld',dataType : "boolean",create : true,update : true,service : null,itemAlias : false});model['smallint_fld'] = '';model._GET['smallint_fld'] = dibContainer.modelItem({key : 'smallint_fld',dataType : "number",create : true,update : true,service : null,itemAlias : false});model['int_fld'] = '';model._GET['int_fld'] = dibContainer.modelItem({key : 'int_fld',dataType : "number",create : true,update : true,service : null,itemAlias : false});model['bigint_fld'] = '';model._GET['bigint_fld'] = dibContainer.modelItem({key : 'bigint_fld',dataType : "number",create : true,update : true,service : null,itemAlias : false});model['float_fld'] = '';model._GET['float_fld'] = dibContainer.modelItem({key : 'float_fld',dataType : "number",create : true,update : true,service : null,itemAlias : false});model['double_fld'] = '';model._GET['double_fld'] = dibContainer.modelItem({key : 'double_fld',dataType : "number",create : true,update : true,service : null,itemAlias : false});model['decimal_fld'] = '';model._GET['decimal_fld'] = dibContainer.modelItem({key : 'decimal_fld',dataType : "number",create : true,update : true,service : null,itemAlias : false});model['date_fld'] = '';model._GET['date_fld'] = dibContainer.modelItem({key : 'date_fld',dataType : "date",create : true,update : true,service : null,itemAlias : false});model['time_fld'] = '';model._GET['time_fld'] = dibContainer.modelItem({key : 'time_fld',dataType : "text",create : true,update : true,service : null,itemAlias : false});model['datetime_fld'] = '';model._GET['datetime_fld'] = dibContainer.modelItem({key : 'datetime_fld',dataType : "dateTime",create : true,update : true,service : null,itemAlias : false});model['year_fld'] = '';model._GET['year_fld'] = dibContainer.modelItem({key : 'year_fld',dataType : "number",create : true,update : true,service : null,itemAlias : false});model['enum_fld'] = '';model._GET['enum_fld'] = dibContainer.modelItem({key : 'enum_fld',dataType : "text",create : true,update : true,service : null,itemAlias : false});model['set_fld'] = '';model._GET['set_fld'] = dibContainer.modelItem({key : 'set_fld',dataType : "text",create : true,update : true,service : null,itemAlias : false});model['email'] = '';model._GET['email'] = dibContainer.modelItem({key : 'email',dataType : "text",create : true,update : true,service : null,itemAlias : false});model['url'] = '';model._GET['url'] = dibContainer.modelItem({key : 'url',dataType : "text",create : true,update : true,service : null,itemAlias : false});model['longitude'] = '';model._GET['longitude'] = dibContainer.modelItem({key : 'longitude',dataType : "text",create : true,update : true,service : null,itemAlias : false});model['lattitude'] = '';model._GET['lattitude'] = dibContainer.modelItem({key : 'lattitude',dataType : "text",create : true,update : true,service : null,itemAlias : false});model['file_fld'] = '';model._GET['file_fld'] = dibContainer.modelItem({key : 'file_fld',dataType : "text",create : true,update : true,service : null,itemAlias : false});model['image_fld'] = '';model._GET['image_fld'] = dibContainer.modelItem({key : 'image_fld',dataType : "text",create : true,update : true,service : null,itemAlias : false});model['document_fld'] = '';model._GET['document_fld'] = dibContainer.modelItem({key : 'document_fld',dataType : "text",create : true,update : true,service : null,itemAlias : false});model['expression_fld'] = '';model._GET['expression_fld'] = dibContainer.modelItem({key : 'expression_fld',dataType : "text",create : true,update : true,service : null,itemAlias : false});model['notes'] = '';model._GET['notes'] = dibContainer.modelItem({key : 'notes',dataType : "text",create : true,update : true,service : null,itemAlias : false});model['selected___test_company_id'] = '';model._GET['test_company_id'] = dibContainer.modelItem({key : 'test_company_id',dataType : "select",create : true,update : true,service : service194824,itemAlias : false});model['selected___test_company2_id'] = '';model._GET['test_company2_id'] = dibContainer.modelItem({key : 'test_company2_id',dataType : "select",create : true,update : true,service : service194825,itemAlias : false});model['dibuid'] = '';model._GET['dibuid'] = dibContainer.modelItem({key : 'dibuid',dataType : "text",create : true,update : true,service : null,itemAlias : false});return model;};function view() {var view = {};view.varchar10 = {'disabled' : false,'visible' : true, 'class' : null, 'style' : null };return view;};function info(){var container = {};container.Id = '8580';container.Name = 'dibtestTestForm';container.SubContainerItemAliases = [];return container;};function primaryKeys() {return ["id"];};};dibtestTestForm.component('dibtestTestForm', {controllerAs: 'dibtestTestForm',templateUrl: DIB.base_url + '/dropins/setNgMaterial/dibForm/Template/view/dibtestTestForm.html?v=' + DIB.load_time,controller : component__dibtestTestForm});component__dibtestTestForm.$inject = [ '$timeout','dibtestTestFormDefinition','$timeout', '$scope','$element','dibCrud','dibNavigation','dibAction','dibContainer','dibDiscover','dibRecord','dibUtility','dibCommon','$log','$q','$ocLazyLoad','dibForm', 'dibMessage','$location','dibAction','dibUtility', '$timeout', 'dibActiveFilterState','service194824','service194825'];function component__dibtestTestForm($timeout,dibtestTestFormDefinition,$timeout, $scope,$element,dibCrud,dibNavigation,dibAction,dibContainer,dibDiscover,dibRecord,dibUtility,dibCommon,$log,$q,$ocLazyLoad,dibForm, dibMessage,$location,dibAction,dibUtility, $timeout, dibActiveFilterState,service194824,service194825) {var ctrl = this;var crudController = "/peff/Crud";var $dibContainer = $element.first();$scope.container = dibtestTestFormDefinition.info();$scope.model = dibtestTestFormDefinition.model();$scope.view = dibtestTestFormDefinition.view();$scope.primaryKeys = dibtestTestFormDefinition.primaryKeys();$scope.dibCommon = dibCommon;dibContainer.watchModel($scope, function () {});var $dibContainer = $element.first();$scope.menus = {};function filterList($scope,$dibContainer,service, query, dropdown) {return service.list($scope,$dibContainer, query).then(function (items) {dropdown.items = items;return $q.when();});}
$scope.dropdowns = {};$scope.dropdowns.service194824 = {};$scope.dropdowns.service194824.items = [];var cancelService194824 = null;var query194824 = '';$scope.loadService194824 = function (query, skipTimeout, forceLoad) {if (query194824 != query || forceLoad === true) {query194824 = query;if (!!skipTimeout) {return filterList($scope,$dibContainer,service194824, query, $scope.dropdowns.service194824);} else {if (!!cancelService194824) $timeout.clear(cancelService194824);cancelService194824 = $timeout(function () {return filterList($scope,$dibContainer,service194824, query, $scope.dropdowns.service194824);}, 100);return cancelService194824;}};};$scope.dropdowns.service194824.getItems = function (query,modelType) {return service194824.list($scope,$dibContainer, query,modelType);};$scope.select194824 = function (model,modelName,fieldName) {if (!!modelName == false) modelName ="model";var $element =  $('#ci194824');if (!!$element.attr('select-model') === false) {$element = $element.find('[select-model]');}
var modelName =  'selected___' + fieldName;$element.trigger('select');if (!!model[modelName]  === false) {return  false;}
angular.forEach($scope.dropdowns.service194824.items, function (item, index)   {if (item.id == model[modelName]['id']) {model[modelName]['id_display_value'] = item.id_display_value;return false;}});};$scope.dropdowns.service194825 = {};$scope.dropdowns.service194825.items = [];var cancelService194825 = null;var query194825 = '';$scope.loadService194825 = function (query, skipTimeout, forceLoad) {if (query194825 != query || forceLoad === true) {query194825 = query;if (!!skipTimeout) {return filterList($scope,$dibContainer,service194825, query, $scope.dropdowns.service194825);} else {if (!!cancelService194825) $timeout.clear(cancelService194825);cancelService194825 = $timeout(function () {return filterList($scope,$dibContainer,service194825, query, $scope.dropdowns.service194825);}, 100);return cancelService194825;}};};$scope.dropdowns.service194825.getItems = function (query,modelType) {return service194825.list($scope,$dibContainer, query,modelType);};$scope.select194825 = function (model,modelName,fieldName) {if (!!modelName == false) modelName ="model";var $element =  $('#ci194825');if (!!$element.attr('select-model') === false) {$element = $element.find('[select-model]');}
var modelName =  'selected___' + fieldName;$element.trigger('select');if (!!model[modelName]  === false) {return  false;}
angular.forEach($scope.dropdowns.service194825.items, function (item, index)   {if (item.id == model[modelName]['id']) {model[modelName]['id_display_value'] = item.id_display_value;return false;}});};$scope.openAuditTrail = function (portAlias) {var primaryKeyData = dibRecord.primaryKeyAuditIds($scope.primaryKeys, $scope.model);if (primaryKeyData.length > 0) {dibCommon.goTo(DIB.audit_trail_container,portAlias,true,"?filter_pef_table_id=%3D1437&filter_record_id=%3D"+primaryKeyData);} else {dibCommon.goTo(DIB.audit_trail_container,portAlias,true,"?filter_pef_table_id=%3D1437");}};ctrl.$onInit = function () {$scope.addModel = function () {dibForm.addModel($scope, "dibtestTestForm");};$scope.deleteRecord = function (options) {dibForm.deleteRecord('dibtestTestForm', $scope, $scope.dibtestTestForm, options, crudController).then(function (){dibNavigation.reset();}).catch(function (data) {});};$scope.saveModel = function (options) {if ($scope.loadingData) return $q.reject('Busy loading...');if (dibForm.validate($scope, $scope.dibtestTestForm)) {$scope.loadingData =  true;var primaryKeyData = dibRecord.primaryKeyData($scope.primaryKeys, $scope.model);return dibForm.updateRecord('dibtestTestForm', $scope, $scope.dibtestTestForm, crudController, options).then(function (data) {if (Object.keys(primaryKeyData).length>0) {} else {loadForm();}
return data;}).catch(function (data) {return data;});}};var mdTabs = $("[dib-container=dibtestTestForm]").closest('md-tabs');var tabsScope = null;if (mdTabs.length === 0) {mdTabs = null;}
else {tabsScope = mdTabs.scope();}
$scope.$watch('dibtestTestForm.$dirty', function (newValue, oldValue) {dibNavigation.containerDirty = newValue;if (dibNavigation.containerDirty && !!mdTabs && !!tabsScope) {var currentIndex = tabsScope.selectedIndex;dibNavigation.addSaveFailedPromise(function(tabIndex) {tabsScope.selectedIndex = tabIndex;return $q.when();}, [currentIndex]);}},true);dibNavigation.addSavePromise($scope.saveModel);$scope.setDependencyData = function (object) {return dibForm.setDependencyData($scope,object);};$scope.itemAliasData = function () {return angular.copy($scope.primaryKeyData);};$scope.clearForm = function () {if ($scope.loadingData) return;$scope.primaryKeyData = null;$scope.reloadContainer();dibForm.clean($scope.dibtestTestForm,$scope.model);};$scope.reloadContainer = function (options) {$element.find('[dib-container-name=dibtestTestForm][select-default]').trigger('refreshDefault');$scope.autoRefresh = true;loadForm ();};};ctrl.$postLink = function () {var isUrlContainer = dibContainer.urlContainer('dibtestTestForm');if (isUrlContainer) {if (!!$location.search()['record'] && $location.search()['record']!='new') {$scope.$broadcast('load');}} else {$scope.$broadcast('load');}
$scope.reloadContainer({ force : true });dibContainer.injectionCompleted();};function loadForm () {var isUrlContainer = dibContainer.urlContainer('dibtestTestForm');if (isUrlContainer) {dibNavigation.reset();}
dibNavigation.addSavePromise($scope.saveModel);$scope.recordStatus = null;if (isUrlContainer) {if (!!$location.search()['record'] && $location.search()['record']!='new') {return;}
if (!!$location.search()['record'] && $location.search()['record']=='new') {dibForm.clean($scope.dibtestTestForm,$scope.model);}}
$scope.primaryKeyData = isUrlContainer ? dibDiscover.getPrimaryKeysFromUrl() : $scope.primaryKeyData;if (!!$scope.primaryKeyData === false) {$scope.primaryKeyData = {};angular.forEach($scope.primaryKeys, function (key,index) {$scope.model[key] = 0;});}
if (Object.keys($scope.primaryKeyData).length ==0) {$scope.recordStatus = "create";} else {$scope.recordStatus = "update";}
$scope.loadingData = true;$scope.currentPrimaryKeyData = $scope.primaryKeyData;dibCrud.read($scope,crudController,'dibtestTestForm',{primaryKeyData : $scope.currentPrimaryKeyData,createParams: "{}"},$scope).then(function (model) {$scope.model = model;$scope.currentPrimaryKeyData = dibRecord.primaryKeyData($scope.primaryKeys, $scope.model);$scope.dibtestTestForm.$setUntouched();$scope.dibtestTestForm.$setPristine();var timeoutTest = $timeout(function () {dibContainer.reloadChildren({containerName: 'dibtestTestForm'});$scope.$broadcast('load');},500);$log.debug("containerName read->model",$scope.model );$scope.loadingData =  false;}).catch(function (error) {$scope.$broadcast('load');$scope.loadingData =  false;});}}})();