
(function() {
    var require = [ ];
    require.push('/dropins/setNgMaterial/dibGlobals/js/component/selectDefault.js');
    var files = [];
    angular.forEach(require, function (file,index) { 
        files.push(DIB.base_url+'/files'+file);
    });
    var dibexLayoutTabsSubcontainer = angular.module('dibexLayoutTabsSubcontainer', [files]);
    var dibexLayoutTabsSubcontainer = angular.module('dibexLayoutTabsSubcontainer');
    dibexLayoutTabsSubcontainer.component('dibexLayoutTabsSubcontainer', {
        controllerAs: 'dibexLayoutTabsSubcontainer',
        templateUrl: DIB.base_url + '/dropins/setNgMaterial/dibContainer/Template/view/dibexLayoutTabsSubcontainer.html',
        controller : component__dibexLayoutTabsSubcontainer
    });
    component__dibexLayoutTabsSubcontainer.$inject = [ '$scope','$element','dibCrud','dibNavigation','dibAction','dibContainer','dibDiscover','dibRecord','dibUtility','dibCommon','$log','$q','$ocLazyLoad'];
    function component__dibexLayoutTabsSubcontainer($scope,$element,dibCrud,dibNavigation,dibAction,dibContainer,dibDiscover,dibRecord,dibUtility,dibCommon,$log,$q,$ocLazyLoad) {
        var ctrl = this;
        ctrl.$onInit = function () { 
                        $scope.container = {};
            $scope.container.Id = '8060';
            $scope.container.Name = 'dibexLayoutTabsSubcontainer';
            $scope.container.SubContainerItemAliases = []; 
            var crudController = "/peff/Crud";
                    $scope.model = {};
        $scope.model._GET = dibRecord.modelConstruct($scope);
        $scope.model._GET['inputdate'] = dibContainer.modelItem({
            dataType : "text", 
            create : true,
            update : true,
            service : null,
            itemAlias : false
        });
        $scope.model._GET['inputnumber'] = dibContainer.modelItem({
            dataType : "number", 
            create : true,
            update : true,
            service : null,
            itemAlias : false
        });
        $scope.view = {};
            var reloadContainerFunctions = [];
            dibContainer.watchModel($scope);
	        $scope.dibCommon = dibCommon;
            $scope.primaryKeys = [];
        var $dibContainer = $element.first();
        $scope.menus = {};
    $scope.dropdowns = {};
            $scope.openAuditTrail = function (portAlias) {
                $log.warn('Audit trail not available for this container, as a table is not linked to this view');
            };
            $scope.recordStatus = "create";
            $scope.reloadContainer = function () {
                //Now we reload all the required 
                dibContainer.reloadChildren({containerName: 'dibexLayoutTabsSubcontainer'});
            };
            if (!!dibContainer.isSubContainer($("[dib-container=dibexLayoutTabsSubcontainer]")) === false) { 
                $scope.reloadContainer();
            }
        };
        //required for permissions
        ctrl.$postLink = function () {
        };
    } 
})();
