(function() {var require = ['/dropins/setNgMaterial/dibGlobals/js/component/dibFileUploader.js','/dropins/setNgMaterial/dibGrid/js/components/dibTableWidth.js','/dropins/setNgMaterial/dibGrid/js/components/dibInlineEdit.js','/dropins/setNgMaterial/dibGrid/js/services/dibGrid.js','/dropins/setNgMaterial/dibForm/js/services/dibForm.js'];require.push('/dropins/setNgMaterial/dibGlobals/js/component/selectDefault.js');var files = [];angular.forEach(require, function (file,index) {var appendChar = file.indexOf("?") == -1 ? "?" : "&";files.push(DIB.base_url+'/files'+file+appendChar+'v='+DIB.load_time);});var dibtestCompanyGrid = angular.module('dibtestCompanyGrid', [files]);dibtestCompanyGrid.service('service155244',service155244);service155244.$inject = ['dibAjax', 'dibDiscover', '$q'];function service155244(dibAjax, dibDiscover, $q) {return {list : list};function list($scope, $element, query, modelType, page) {var url = dibDiscover.updateQueryStringDropdown(DIB.base_url + "/peff/Crud/componentlist/dibtestCompanyGrid?containerItemId=155244", query, modelType, page);var requestInfo = dibDiscover.addToUrl({field :$('#ci155244'),$scope : $scope,container : $element,url : url});return dibAjax.post(requestInfo, {excludeFromCancels : true,factoryResult : function (data) {return data.records;}});};};dibtestCompanyGrid.service('service155247',service155247);service155247.$inject = ['dibAjax', 'dibDiscover', '$q'];function service155247(dibAjax, dibDiscover, $q) {return {list : list};function list($scope, $element, query, modelType, page) {var url = dibDiscover.updateQueryStringDropdown(DIB.base_url + "/peff/Crud/componentlist/dibtestCompanyGrid?containerItemId=155247", query, modelType, page);var requestInfo = dibDiscover.addToUrl({field :$('#ci155247'),$scope : $scope,container : $element,url : url});return dibAjax.post(requestInfo, {excludeFromCancels : true,factoryResult : function (data) {return data.records;}});};};dibtestCompanyGrid.factory('dibtestCompanyGridDefinition',dibtestCompanyGridDefinition);dibtestCompanyGridDefinition.$inject = ['dibContainer','service155244','service155247'];function dibtestCompanyGridDefinition(dibContainer,service155244,service155247) {return {model : model,view : view,info : info,primaryKeys : primaryKeys};function model() {var model = {};model._GET = {};model['id'] = '';model._GET['id'] = dibContainer.modelItem({key : 'id',dataType : "number",create : false,update : false,service : null,itemAlias : false});model['name'] = '';model._GET['name'] = dibContainer.modelItem({key : 'name',dataType : "text",create : true,update : true,service : null,itemAlias : false});model['chinese_name'] = '';model._GET['chinese_name'] = dibContainer.modelItem({key : 'chinese_name',dataType : "text",create : true,update : true,service : null,itemAlias : 'chineseName'});model['selected___parent_company_id'] = '';model._GET['parent_company_id'] = dibContainer.modelItem({key : 'parent_company_id',dataType : "select",create : true,update : true,service : service155244,itemAlias : 'parCompanyId'});model['notes'] = '';model._GET['notes'] = dibContainer.modelItem({key : 'notes',dataType : "text",create : true,update : true,service : null,itemAlias : false});model['website'] = '';model._GET['website'] = dibContainer.modelItem({key : 'website',dataType : "text",create : true,update : true,service : null,itemAlias : false});model['selected___parent_company_contact_id'] = '';model._GET['parent_company_contact_id'] = dibContainer.modelItem({key : 'parent_company_contact_id',dataType : "select",create : true,update : true,service : service155247,itemAlias : false});model['icon'] = '';model._GET['icon'] = dibContainer.modelItem({key : 'icon',dataType : "text",create : true,update : true,service : null,itemAlias : false});return model;};function view() {var view = {};view.xlsxE = {'disabled' : false,'visible' : true, 'class' : null, 'style' : null };view.xls = {'disabled' : false,'visible' : true, 'class' : null, 'style' : null };view.csv = {'disabled' : false,'visible' : true, 'class' : null, 'style' : null };view.xlsx = {'disabled' : false,'visible' : true, 'class' : null, 'style' : null };view.xlsxA = {'disabled' : false,'visible' : true, 'class' : null, 'style' : null };view.findReplace = {'disabled' : false,'visible' : true, 'class' : null, 'style' : null };view.chineseName = {'disabled' : false,'visible' : true, 'class' : null, 'style' : null };view.parCompanyId = {'disabled' : false,'visible' : true, 'class' : null, 'style' : null };return view;};function info(){var container = {};container.Id = '7150';container.Name = 'dibtestCompanyGrid';container.SubContainerItemAliases = [];return container;};function primaryKeys() {return ["id"];};};dibtestCompanyGrid.component('dibtestCompanyGrid', {controllerAs: 'dibtestCompanyGrid',templateUrl: DIB.base_url + '/dropins/setNgMaterial/dibGrid/Template/view/dibtestCompanyGrid.html?v=' + DIB.load_time,controller : component__dibtestCompanyGrid});component__dibtestCompanyGrid.$inject = [ '$timeout','dibtestCompanyGridDefinition','$timeout', '$scope','$element','dibCrud','dibNavigation','dibAction','dibContainer','dibDiscover','dibRecord','dibUtility','dibCommon','$log','$q','$ocLazyLoad','dibGrid', 'dibForm', '$location', '$timeout', 'dibMessage','dibKeysPressed','service155244','service155247'];function component__dibtestCompanyGrid($timeout,dibtestCompanyGridDefinition,$timeout, $scope,$element,dibCrud,dibNavigation,dibAction,dibContainer,dibDiscover,dibRecord,dibUtility,dibCommon,$log,$q,$ocLazyLoad,dibGrid, dibForm, $location, $timeout, dibMessage,dibKeysPressed,service155244,service155247) {var ctrl = this;var crudController = "/peff/Crud";var $dibContainer = $element.first();$scope.container = dibtestCompanyGridDefinition.info();$scope.model = dibtestCompanyGridDefinition.model();$scope.view = dibtestCompanyGridDefinition.view();$scope.primaryKeys = dibtestCompanyGridDefinition.primaryKeys();$scope.dibCommon = dibCommon;dibContainer.watchModel($scope, function () {});var $dibContainer = $element.first();$scope.menus = {};function filterList($scope,$dibContainer,service, query, dropdown) {return service.list($scope,$dibContainer, query).then(function (items) {dropdown.items = items;return $q.when();});}
$scope.dropdowns = {};$scope.dropdowns.service155244 = {};$scope.dropdowns.service155244.items = [];var cancelService155244 = null;var query155244 = '';$scope.loadService155244 = function (query, skipTimeout, forceLoad) {if (query155244 != query || forceLoad === true) {query155244 = query;if (!!skipTimeout) {return filterList($scope,$dibContainer,service155244, query, $scope.dropdowns.service155244);} else {if (!!cancelService155244) $timeout.clear(cancelService155244);cancelService155244 = $timeout(function () {return filterList($scope,$dibContainer,service155244, query, $scope.dropdowns.service155244);}, 100);return cancelService155244;}};};$scope.dropdowns.service155244.getItems = function (query,modelType) {return service155244.list($scope,$dibContainer, query,modelType);};$scope.select155244 = function (model,modelName,fieldName) {if (!!modelName == false) modelName ="model";var $element =  $('#ci155244');if (!!$element.attr('select-model') === false) {$element = $element.find('[select-model]');}
var modelName =  'selected___' + fieldName;$element.trigger('select');if (!!model[modelName]  === false) {return  false;}
angular.forEach($scope.dropdowns.service155244.items, function (item, index)   {if (item.id == model[modelName]['id']) {model[modelName]['id_display_value'] = item.id_display_value;return false;}});};$scope.dropdowns.service155247 = {};$scope.dropdowns.service155247.items = [];var cancelService155247 = null;var query155247 = '';$scope.loadService155247 = function (query, skipTimeout, forceLoad) {if (query155247 != query || forceLoad === true) {query155247 = query;if (!!skipTimeout) {return filterList($scope,$dibContainer,service155247, query, $scope.dropdowns.service155247);} else {if (!!cancelService155247) $timeout.clear(cancelService155247);cancelService155247 = $timeout(function () {return filterList($scope,$dibContainer,service155247, query, $scope.dropdowns.service155247);}, 100);return cancelService155247;}};};$scope.dropdowns.service155247.getItems = function (query,modelType) {return service155247.list($scope,$dibContainer, query,modelType);};$scope.select155247 = function (model,modelName,fieldName) {if (!!modelName == false) modelName ="model";var $element =  $('#ci155247');if (!!$element.attr('select-model') === false) {$element = $element.find('[select-model]');}
var modelName =  'selected___' + fieldName;$element.trigger('select');if (!!model[modelName]  === false) {return  false;}
angular.forEach($scope.dropdowns.service155247.items, function (item, index)   {if (item.id == model[modelName]['id']) {model[modelName]['id_display_value'] = item.id_display_value;return false;}});};$scope.openAuditTrail = function (portAlias) {var primaryKeyData = dibRecord.primaryKeyAuditIds($scope.primaryKeys, $scope.model);if (primaryKeyData.length > 0) {dibCommon.goTo(DIB.audit_trail_container,portAlias,true,"?filter_pef_table_id=%3D1440&filter_record_id=%3D"+primaryKeyData);} else {dibCommon.goTo(DIB.audit_trail_container,portAlias,true,"?filter_pef_table_id=%3D1440");}};$scope.gridOptions = {};$scope.gridOptions.data = 'gridData';$scope.gridOptions.sortFields = {};$scope.gridOptions.sortNr = 0;$scope.gridOptions.toggleSort = function (fieldName) {dibGrid.toggleSort($scope,"dibtestCompanyGrid",fieldName);loadGrid();};$scope.search = {};$scope.clearSearch = function () {dibGrid.clearSearch($scope);};$scope.searchGrid = function () {dibGrid.prepareSearch($scope, "dibtestCompanyGrid");loadGrid();};$scope.$watch("showSearch", function () {$timeout(function () {$("[dib-container=dibtestCompanyGrid]").find('.dib-grid-column-content').trigger('refreshHeight')},50);if (!!$scope.showSearch === false) {$scope.search = {};if (!!$scope.gridData) loadGrid();}});ctrl.$onInit = function () {var additionalInfoOnEvent = null;dibAction.executeAction({field : !!$element ? $element.first() : $('[dib-container=dibtestCompanyGrid]'),scope : $scope,containerName: 'dibtestCompanyGrid',triggerType: 'onInit',nextActionItem: '',containerEventId: 'dib*ly61w9dlbk',containerId: 7150,submitUrl: '/dropins/dibExamples/Events/containerEvents',itemAlias: '',refreshItemId : '',responseType: 'actions'}
, additionalInfoOnEvent);$scope.recordStatus = "update";$scope.gridOptions.inlineAddShow = "" == "true";$scope.toggleInlineAdd = function () {dibGrid.toggleInlineAdd($scope, $element);};$scope.useSelectedRow = function ($form, $event, model) {$form.$setDirty();dibGrid.useSelectedRow($scope, $event, model);};$scope.selectedItems = [];$scope.lastSelectedItem = null;var arraySelected = [];$scope.selectRow = function (row,$event) {if ($scope.editOpen) return;if ('' == 'disabled') {angular.forEach($scope.gridData, function(row,index) {row.___selected = false;});}
dibGrid.selectRow($scope,$element, row, $event);if (!!$event) return;//To enable double click we cancel the event
var additionalInfoOnEvent = null;dibAction.executeAction({field : !!$element ? $element.first() : $('[dib-container=dibtestCompanyGrid]'),scope : $scope,containerName: 'dibtestCompanyGrid',triggerType: 'rowClick',nextActionItem: '',containerEventId: 'dib*63b1l121ye1',containerId: 7150,submitUrl: '/dropins/dibExamples/Events/containerEvents',itemAlias: '',refreshItemId : '',responseType: 'actions'}
, additionalInfoOnEvent);if (row.___selected) {}  else {}};$scope.saveRow = function ($form, $event, row) {var element = $($event.target).parents('[dib-inline-edit]');element.trigger('editClose');$scope.editOpen = false;$event.stopPropagation();$event.preventDefault();};$scope.addRow = function ($form, $event, row) {var element = $($event.target).parents('[dib-inline-edit]');element.trigger('addRow');$event.stopPropagation();$event.preventDefault();};$scope.cancelRow = function ($event, row) {var element = $($event.target).parents('[dib-inline-edit]');row.___editing = false;row.___selected = true;element.find('[dib-edit]').hide();element.find('[dib-view]').show();$scope.editOpen = false;$event.stopPropagation();$event.preventDefault();};$scope.cleanRow = function ($form,$event, model) {dibForm.clean($form,model);angular.forEach($scope.primaryKeys, function (key, index) {model[key] = 0;});$event.stopPropagation();$event.preventDefault();};$scope.rowEdit = function (row, $event, element) {if ('' == 'disabled') {angular.forEach($scope.gridData, function(row,index) {row.___selected = false;});}
dibGrid.selectRow($scope,$element, row, $event);$element.find('[dib-inline-edit=open]').trigger('editClose');var $rowElement = $(element).find('[dib-inline-edit]');if ($rowElement.length > 0) {$scope.editOpen = true;$rowElement.trigger('edit');$rowElement.removeClass('md-accent');}
var $rowElement =$rowElement.parents('[dib-inline-edit=add-mode]');if ($rowElement.length>0) {$rowElement.trigger('addRow');}};$scope.itemAliasData = function () {if (!!$scope.lastSelectedItem == false) return null;var itemSelected = dibRecord.primaryKeyData($scope.primaryKeys, $scope.lastSelectedItem);angular.extend(itemSelected, dibRecord.getDataFromSelected($scope, $scope.lastSelectedItem, true).recordData);return itemSelected;};$scope.scrollConfig = {autoHideScrollbar: false,theme: 'light',advanced:{updateOnContentResize: true},setHeight: 200,scrollInertia: 0};$scope.createRecord = function (data) {$scope.loadingData = true;return dibCrud.create($scope, crudController,'dibtestCompanyGrid', {data : data}).then(function (data) {$scope.page.number = 1;loadGrid();return $q.when(data);}, function (error) {$scope.loadingData = false;return $q.reject(error);});};$scope.updateRecord = function (data) {$scope.loadingData = true;var primaryKeyData = dibRecord.primaryKeyData($scope.primaryKeys, data.recordData);return dibCrud.update($scope, crudController,'dibtestCompanyGrid',{primaryKeyData : primaryKeyData,data : data,createParams: "{}"}).then(function (data) {$scope.loadingData = false;return $q.when(data);}, function (error) {$scope.loadingData = false;return $q.reject(error);});};$scope.deleteRecord = function (data) {$scope.loadingData = true;var primaryKeyData = dibRecord.primaryKeyData($scope.primaryKeys, data);return dibCrud.delete($scope,crudController,'dibtestCompanyGrid',data,$scope.primaryKeys).then(function () {$scope.page.number = 1;loadGrid();});};var deleteSelectedRecords = function () {if ($scope.selectedItems.length > 0) {$scope.loadingData = true;var selectedRecord =  $scope.selectedItems.pop();var primaryKeyData = dibRecord.primaryKeyData($scope.primaryKeys, selectedRecord);dibCrud.delete($scope,crudController,'dibtestCompanyGrid',{primaryKeyData : primaryKeyData}).then(function (data) {deleteSelectedRecords();return $q.resolve();}, function (data) {deleteSelectedRecords();return $q.reject(data);});} else if ($scope.loadingData) {loadGrid();}};$scope.deleteSelected = function() {dibMessage.confirm({title: 'Delete selected records',text : 'Warning - are you sure you want to permanently delete all the selected records?'}).then(function () {deleteSelectedRecords();});};$scope.page = {count : 0,limit : 10,number : 1,lastLoad : 1};$scope.nextPage = function () {$scope.page.number++;};$scope.lastPage = function () {$scope.page.number = $scope.page.count;};$scope.firstPage = function () {$scope.page.number = 1;};$scope.previousPage = function () {$scope.page.number--;};$scope.$watch("page.limit", function () {$scope.page.number = 1;if (!!$scope.gridData) loadGrid();});$scope.$watch("page.number", function () {if ($scope.page.number == 0) {$scope.page.number = 1;}
if (!!$scope.page.number === false) {return;}
if ($scope.page.number < 1) {$scope.page.number = 1;}
if ($scope.page.count <$scope.page.number && $scope.page.count!=0 ) {$scope.page.number = $scope.page.count;return;}
if ($scope.page.lastLoad != $scope.page.number && !!$scope.gridData){loadGrid();$scope.page.lastLoad = $scope.page.number;}});$scope.gridOptions.enableFiltering = true;dibGrid.applyFilterOnUrl($scope, "dibtestCompanyGrid");dibGrid.applySortOnUrl($scope, "dibtestCompanyGrid");$scope.reloadContainer  = function (options) {dibGrid.applyFilterOnUrl($scope, "dibtestCompanyGrid");dibGrid.applySortOnUrl($scope, "dibtestCompanyGrid");loadGrid();};};ctrl.$postLink = function () {var additionalInfoOnEvent = null;dibAction.executeAction({field : !!$element ? $element.first() : $('[dib-container=dibtestCompanyGrid]'),scope : $scope,containerName: 'dibtestCompanyGrid',triggerType: 'postLink',nextActionItem: '',containerEventId: 'dib*ea61up51e3x',containerId: 7150,submitUrl: '/dropins/dibExamples/Events/containerEvents',itemAlias: '',refreshItemId : '',responseType: 'actions'}
, additionalInfoOnEvent);$scope.reloadContainer({ force : true });dibContainer.injectionCompleted();};function loadGrid() {$scope.loadingData = true;dibCrud.list($scope, $element, crudController,'dibtestCompanyGrid',$scope.page, $scope.search, null, $scope.gridOptions.sortFields).then(function (data) {if (!!data.records == false)data.records = [];$scope.selectedItems = [];$scope.lastSelectedItem = null;var arraySelected = [];$scope.page.count = Math.ceil(data.filtertotal / $scope.page.limit, 10);$scope.page.records = data.filtertotal;$scope.page.totalRecords = data.total;$scope.page.fromRecord = $scope.page.number==1? 1 : ($scope.page.number-1)*$scope.page.limit;$scope.page.toRecord = $scope.page.fromRecord==1? $scope.page.fromRecord + data.records.length - 1 : $scope.page.fromRecord + data.records.length;if ($scope.page.fromRecord == 1 && data.records.length ==0 ) {$scope.page.fromRecord = 0;}
if ($scope.page.number != 1 && data.records.length ==0) {loadGrid();$scope.page.number --;return;}
$scope.loadingData = false;$scope.gridData = data.records;var additionalInfoOnEvent = null;dibAction.executeAction({field : !!$element ? $element.first() : $('[dib-container=dibtestCompanyGrid]'),scope : $scope,containerName: 'dibtestCompanyGrid',triggerType: 'load',nextActionItem: '',containerEventId: 'dib*6lbbnwjmb',containerId: 7150,submitUrl: '/dropins/dibExamples/Events/containerEvents',itemAlias: '',refreshItemId : '',responseType: 'actions'}
, additionalInfoOnEvent);$scope.$broadcast('load');$timeout(function () {$('[dib-container=dibtestCompanyGrid]').find('[select-default]').trigger('refreshDefault');},100);}, function (error) {$scope.loadingData = false;});};}})();