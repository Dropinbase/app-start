(function() {var require = ['/dropins/setNgMaterial/dibGlobals/js/component/timeDatePickerInput.js','/dropins/setNgMaterial/dibGrid/js/components/dibTableWidth.js','/dropins/setNgMaterial/dibGrid/js/components/dibInlineEdit.js','/dropins/setNgMaterial/dibGrid/js/services/dibGrid.js','/dropins/setNgMaterial/dibForm/js/services/dibForm.js'];require.push('/dropins/setNgMaterial/dibGlobals/js/component/selectDefault.js');var files = [];angular.forEach(require, function (file,index) {files.push(DIB.base_url+'/files'+file);});var dibexComponentGrid = angular.module('dibexComponentGrid', [files]);dibexComponentGrid.service('service155576',service155576);service155576.$inject = ['dibAjax', 'dibDiscover', '$q'];function service155576(dibAjax, dibDiscover, $q) {return {list : list};function list($scope, $element, query, modelType, page) {var url = dibDiscover.updateQueryStringDropdown(DIB.base_url + "/peff/Crud/componentlist/dibexComponentGrid?containerItemId=155576", query, modelType, page);var requestInfo = dibDiscover.addToUrl({field :$('#ci155576'),$scope : $scope,container : $element,url : url});return dibAjax.post(requestInfo, {excludeFromCancels : true,factoryResult : function (data) {return data.records;}});};};dibexComponentGrid.service('service155577',service155577);service155577.$inject = ['dibAjax', 'dibDiscover', '$q'];function service155577(dibAjax, dibDiscover, $q) {return {list : list};function list($scope, $element, query, modelType, page) {var url = dibDiscover.updateQueryStringDropdown(DIB.base_url + "/peff/Crud/componentlist/dibexComponentGrid?containerItemId=155577", query, modelType, page);var requestInfo = dibDiscover.addToUrl({field :$('#ci155577'),$scope : $scope,container : $element,url : url});return dibAjax.post(requestInfo, {excludeFromCancels : true,factoryResult : function (data) {return data.records;}});};};dibexComponentGrid.factory('dibexComponentGridDefinition',dibexComponentGridDefinition);dibexComponentGridDefinition.$inject = ['dibContainer','service155576','service155577'];function dibexComponentGridDefinition(dibContainer,service155576,service155577) {return {model : model,view : view,info : info,primaryKeys : primaryKeys};function model() {var model = {};model._GET = {};model['id'] = '';model._GET['id'] = dibContainer.modelItem({key : 'id',dataType : "number",create : false,update : false,service : null,itemAlias : false});model['varchar10_required'] = '';model._GET['varchar10_required'] = dibContainer.modelItem({key : 'varchar10_required',dataType : "text",create : true,update : true,service : null,itemAlias : false});model['has_default'] = '';model._GET['has_default'] = dibContainer.modelItem({key : 'has_default',dataType : "text",create : true,update : true,service : null,itemAlias : false});model['time_stamp'] = '';model._GET['time_stamp'] = dibContainer.modelItem({key : 'time_stamp',dataType : "dateTime",create : true,update : true,service : null,itemAlias : false});model['unique_fld'] = '';model._GET['unique_fld'] = dibContainer.modelItem({key : 'unique_fld',dataType : "text",create : true,update : true,service : null,itemAlias : false});model['nvarchar80'] = '';model._GET['nvarchar80'] = dibContainer.modelItem({key : 'nvarchar80',dataType : "text",create : true,update : true,service : null,itemAlias : false});model['text_fld'] = '';model._GET['text_fld'] = dibContainer.modelItem({key : 'text_fld',dataType : "text",create : true,update : true,service : null,itemAlias : false});model['tinytext_fld'] = '';model._GET['tinytext_fld'] = dibContainer.modelItem({key : 'tinytext_fld',dataType : "text",create : true,update : true,service : null,itemAlias : false});model['mediumtext_fld'] = '';model._GET['mediumtext_fld'] = dibContainer.modelItem({key : 'mediumtext_fld',dataType : "text",create : true,update : true,service : null,itemAlias : false});model['longtext_fld'] = '';model._GET['longtext_fld'] = dibContainer.modelItem({key : 'longtext_fld',dataType : "text",create : true,update : true,service : null,itemAlias : false});model['bit_fld'] = '';model._GET['bit_fld'] = dibContainer.modelItem({key : 'bit_fld',dataType : "text",create : true,update : true,service : null,itemAlias : false});model['tinyint_fld'] = '';model._GET['tinyint_fld'] = dibContainer.modelItem({key : 'tinyint_fld',dataType : "boolean",create : true,update : true,service : null,itemAlias : false});model['smallint_fld'] = '';model._GET['smallint_fld'] = dibContainer.modelItem({key : 'smallint_fld',dataType : "number",create : true,update : true,service : null,itemAlias : false});model['int_fld'] = '';model._GET['int_fld'] = dibContainer.modelItem({key : 'int_fld',dataType : "number",create : true,update : true,service : null,itemAlias : false});model['bigint_fld'] = '';model._GET['bigint_fld'] = dibContainer.modelItem({key : 'bigint_fld',dataType : "number",create : true,update : true,service : null,itemAlias : false});model['float_fld'] = '';model._GET['float_fld'] = dibContainer.modelItem({key : 'float_fld',dataType : "number",create : true,update : true,service : null,itemAlias : false});model['double_fld'] = '';model._GET['double_fld'] = dibContainer.modelItem({key : 'double_fld',dataType : "number",create : true,update : true,service : null,itemAlias : false});model['decimal_fld'] = '';model._GET['decimal_fld'] = dibContainer.modelItem({key : 'decimal_fld',dataType : "number",create : true,update : true,service : null,itemAlias : false});model['date_fld'] = '';model._GET['date_fld'] = dibContainer.modelItem({key : 'date_fld',dataType : "date",create : true,update : true,service : null,itemAlias : false});model['time_fld'] = '';model._GET['time_fld'] = dibContainer.modelItem({key : 'time_fld',dataType : "text",create : true,update : true,service : null,itemAlias : false});model['datetime_fld'] = '';model._GET['datetime_fld'] = dibContainer.modelItem({key : 'datetime_fld',dataType : "dateTime",create : true,update : true,service : null,itemAlias : false});model['year_fld'] = '';model._GET['year_fld'] = dibContainer.modelItem({key : 'year_fld',dataType : "number",create : true,update : true,service : null,itemAlias : false});model['enum_fld'] = '';model._GET['enum_fld'] = dibContainer.modelItem({key : 'enum_fld',dataType : "text",create : true,update : true,service : null,itemAlias : false});model['set_fld'] = '';model._GET['set_fld'] = dibContainer.modelItem({key : 'set_fld',dataType : "text",create : true,update : true,service : null,itemAlias : false});model['email'] = '';model._GET['email'] = dibContainer.modelItem({key : 'email',dataType : "text",create : true,update : true,service : null,itemAlias : false});model['url'] = '';model._GET['url'] = dibContainer.modelItem({key : 'url',dataType : "text",create : true,update : true,service : null,itemAlias : false});model['longitude'] = '';model._GET['longitude'] = dibContainer.modelItem({key : 'longitude',dataType : "text",create : true,update : true,service : null,itemAlias : false});model['lattitude'] = '';model._GET['lattitude'] = dibContainer.modelItem({key : 'lattitude',dataType : "text",create : true,update : true,service : null,itemAlias : false});model['file_fld'] = '';model._GET['file_fld'] = dibContainer.modelItem({key : 'file_fld',dataType : "text",create : true,update : true,service : null,itemAlias : false});model['image_fld'] = '';model._GET['image_fld'] = dibContainer.modelItem({key : 'image_fld',dataType : "text",create : true,update : true,service : null,itemAlias : false});model['document_fld'] = '';model._GET['document_fld'] = dibContainer.modelItem({key : 'document_fld',dataType : "text",create : true,update : true,service : null,itemAlias : false});model['expression_fld'] = '';model._GET['expression_fld'] = dibContainer.modelItem({key : 'expression_fld',dataType : "text",create : true,update : true,service : null,itemAlias : false});model['notes'] = '';model._GET['notes'] = dibContainer.modelItem({key : 'notes',dataType : "text",create : true,update : true,service : null,itemAlias : false});model['select___test_company_id'] = '';model._GET['test_company_id'] = dibContainer.modelItem({key : 'test_company_id',dataType : "select",create : true,update : true,service : service155576,itemAlias : false});model['select___test_company2_id'] = '';model._GET['test_company2_id'] = dibContainer.modelItem({key : 'test_company2_id',dataType : "select",create : true,update : true,service : service155577,itemAlias : false});return model;};function view() {var view = {};return view;};function info(){var container = {};container.Id = '7162';container.Name = 'dibexComponentGrid';container.SubContainerItemAliases = [];return container;};function primaryKeys() {return ["id"];};};dibexComponentGrid.component('dibexComponentGrid', {controllerAs: 'dibexComponentGrid',templateUrl: DIB.base_url + '/dropins/setNgMaterial/dibGrid/Template/view/dibexComponentGrid.html',controller : component__dibexComponentGrid});component__dibexComponentGrid.$inject = [ 'dibexComponentGridDefinition','$scope','$element','dibCrud','dibNavigation','dibAction','dibContainer','dibDiscover','dibRecord','dibUtility','dibCommon','$log','$q','$ocLazyLoad','dibGrid', 'dibForm', '$location', '$timeout', 'dibMessage','dibKeysPressed','service155576','service155577'];function component__dibexComponentGrid(dibexComponentGridDefinition,$scope,$element,dibCrud,dibNavigation,dibAction,dibContainer,dibDiscover,dibRecord,dibUtility,dibCommon,$log,$q,$ocLazyLoad,dibGrid, dibForm, $location, $timeout, dibMessage,dibKeysPressed,service155576,service155577) {var ctrl = this;var crudController = "/peff/Crud";var $dibContainer = $element.first();$scope.container = dibexComponentGridDefinition.info();$scope.model = dibexComponentGridDefinition.model();$scope.view = dibexComponentGridDefinition.view();$scope.primaryKeys = dibexComponentGridDefinition.primaryKeys();$scope.dibCommon = dibCommon;dibContainer.watchModel($scope, function () {});var $dibContainer = $element.first();$scope.menus = {};function filterList($scope,$dibContainer,service, query, dropdown) {return service.list($scope,$dibContainer, query).then(function (items) {dropdown.items = items;return $q.when();});}
$scope.dropdowns = {};$scope.dropdowns.service155576 = {};$scope.dropdowns.service155576.items = [];var cancelService155576 = null;var query155576 = '';$scope.loadService155576 = function (query, skipTimeout) {if (query155576 != query) {query155576 = query;if (!!skipTimeout) {return filterList($scope,$dibContainer,service155576, query, $scope.dropdowns.service155576);} else {if (!!cancelService155576) $timeout.clear(cancelService155576);cancelService155576 = $timeout(function () {return filterList($scope,$dibContainer,service155576, query, $scope.dropdowns.service155576);}, 100);return cancelService155576;}};};$scope.dropdowns.service155576.getItems = function (query,modelType) {return service155576.list($scope,$dibContainer, query,modelType);};$scope.select155576 = function (model,modelName,fieldName) {if (!!modelName == false) modelName ="model";var $element =  $('#ci155576');if (!!$element.attr('select-model') === false) {$element = $element.find('[select-model]');}
var modelName =  'selected___' + fieldName;$element.trigger('select');if (!!model[modelName]  === false) {return  false;}
angular.forEach($scope.dropdowns.service155576.items, function (item, index)   {if (item.id == model[modelName]['id']) {model[modelName]['id_display_value'] = item.id_display_value;return false;}});};$scope.dropdowns.service155577 = {};$scope.dropdowns.service155577.items = [];var cancelService155577 = null;var query155577 = '';$scope.loadService155577 = function (query, skipTimeout) {if (query155577 != query) {query155577 = query;if (!!skipTimeout) {return filterList($scope,$dibContainer,service155577, query, $scope.dropdowns.service155577);} else {if (!!cancelService155577) $timeout.clear(cancelService155577);cancelService155577 = $timeout(function () {return filterList($scope,$dibContainer,service155577, query, $scope.dropdowns.service155577);}, 100);return cancelService155577;}};};$scope.dropdowns.service155577.getItems = function (query,modelType) {return service155577.list($scope,$dibContainer, query,modelType);};$scope.select155577 = function (model,modelName,fieldName) {if (!!modelName == false) modelName ="model";var $element =  $('#ci155577');if (!!$element.attr('select-model') === false) {$element = $element.find('[select-model]');}
var modelName =  'selected___' + fieldName;$element.trigger('select');if (!!model[modelName]  === false) {return  false;}
angular.forEach($scope.dropdowns.service155577.items, function (item, index)   {if (item.id == model[modelName]['id']) {model[modelName]['id_display_value'] = item.id_display_value;return false;}});};$scope.openAuditTrail = function (portAlias) {var primaryKeyData = dibRecord.primaryKeyAuditIds($scope.primaryKeys, $scope.model);if (primaryKeyData.length > 0) {dibCommon.goTo(DIB.audit_trail_container,portAlias,true,"?filter_pef_table_id=%3D1437&filter_record_id=%3D"+primaryKeyData);} else {dibCommon.goTo(DIB.audit_trail_container,portAlias,true,"?filter_pef_table_id=%3D1437");}};$scope.gridOptions = {};$scope.gridOptions.data = 'gridData';$scope.gridOptions.sortFields = {};$scope.gridOptions.sortNr = 0;$scope.gridOptions.toggleSort = function (fieldName) {dibGrid.toggleSort($scope,"dibexComponentGrid",fieldName);loadGrid();};$scope.search = {};$scope.clearSearch = function () {dibGrid.clearSearch($scope);};$scope.searchGrid = function () {dibGrid.prepareSearch($scope, "dibexComponentGrid");loadGrid();};$scope.$watch("showSearch", function () {$timeout(function () {$("[dib-container=dibexComponentGrid]").find('.dib-grid-column-content').trigger('refreshHeight')},50);if (!!$scope.showSearch === false) {$scope.search = {};if (!!$scope.gridData) loadGrid();}});ctrl.$onInit = function () {$scope.gridOptions.inlineAddShow = "" == "true";$scope.toggleInlineAdd = function () {dibGrid.toggleInlineAdd($scope, $element);};$scope.useSelectedRow = function ($event, model) {dibGrid.useSelectedRow($scope, $event, model);};$scope.selectedItems = [];$scope.lastSelectedItem = null;var arraySelected = [];$scope.selectRow = function (row,$event) {dibGrid.selectRow($scope,$element, row, $event);if (!!$event) return;//To enable double click we cancel the event
if (row.___selected) {}  else {}};$scope.saveRow = function ($event, row) {var element = $($event.target).parents('[dib-inline-edit]');element.trigger('editClose');$event.stopPropagation();$event.preventDefault();};$scope.addRow = function ($event, row) {var element = $($event.target).parents('[dib-inline-edit]');element.trigger('addRow');$event.stopPropagation();$event.preventDefault();};$scope.cancelRow = function ($event, row) {var element = $($event.target).parents('[dib-inline-edit]');row.___editing = false;row.___selected = true;element.find('[dib-edit]').hide();element.find('[dib-view]').show();$event.stopPropagation();$event.preventDefault();};$scope.cleanRow = function ($event, model, $form) {$form.$setDirty(false);dibForm.clean($form,model);$event.stopPropagation();$event.preventDefault();};$scope.rowEdit = function (element) {$element.find('[dib-inline-edit=open]').trigger('editClose');var $rowElement = $(element).find('[dib-inline-edit]');if ($rowElement.length > 0) {$rowElement.trigger('edit');$rowElement.removeClass('md-accent');}
var $rowElement =$rowElement.parents('[dib-inline-edit=add-mode]');if ($rowElement.length>0) {$rowElement.trigger('addRow');}};$scope.itemAliasData = function () {if (!!$scope.lastSelectedItem == false) return null;var itemSelected = dibRecord.primaryKeyData($scope.primaryKeys, $scope.lastSelectedItem);angular.extend(itemSelected, dibRecord.getDataFromSelected($scope, $scope.lastSelectedItem, true).recordData);return itemSelected;};$scope.scrollConfig = {autoHideScrollbar: false,theme: 'light',advanced:{updateOnContentResize: true},setHeight: 200,scrollInertia: 0};$scope.createRecord = function (data) {$scope.loadingData = true;return dibCrud.create($scope, crudController,'dibexComponentGrid', {data : data}).then(function () {$scope.page.number = 1;loadGrid();return $q.when();}, function () {$scope.loadingData = false;return $q.reject();});};$scope.updateRecord = function (data) {$scope.loadingData = true;var primaryKeyData = dibRecord.primaryKeyData($scope.primaryKeys, data.recordData);return dibCrud.update($scope, crudController,'dibexComponentGrid',{primaryKeyData : primaryKeyData,data : data,createParams: "{}"}).then(function (data) {$scope.loadingData = false;return $q.resolve();}, function (data) {$scope.loadingData = false;return $q.reject(data);});};$scope.deleteRecord = function (data) {$scope.loadingData = true;var primaryKeyData = dibRecord.primaryKeyData($scope.primaryKeys, data);return dibCrud.delete($scope,crudController,'dibexComponentGrid',data,$scope.primaryKeys).then(function () {$scope.page.number = 1;loadGrid();});};var deleteSelectedRecords = function () {if ($scope.selectedItems.length > 0) {$scope.loadingData = true;var selectedRecord =  $scope.selectedItems.pop();var primaryKeyData = dibRecord.primaryKeyData($scope.primaryKeys, selectedRecord);dibCrud.delete($scope,crudController,'dibexComponentGrid',{primaryKeyData : primaryKeyData}).then(function (data) {deleteSelectedRecords();return $q.resolve();}, function (data) {deleteSelectedRecords();return $q.reject(data);});} else if ($scope.loadingData) {loadGrid();}};$scope.deleteSelected = function() {dibMessage.confirm({title: 'Delete selected records',text : 'Warning - are you sure you want to permanently delete all the selected records?'}).then(function () {deleteSelectedRecords();});};$scope.page = {count : 0,limit : 10,number : 1};$scope.nextPage = function () {$scope.page.number++;};$scope.lastPage = function () {$scope.page.number = $scope.page.count;};$scope.firstPage = function () {$scope.page.number = 1;};$scope.previousPage = function () {$scope.page.number--;};$scope.$watch("page.limit", function () {$scope.page.number = 1;if (!!$scope.gridData) loadGrid();});$scope.$watch("page.number", function () {if (!!$scope.gridData) loadGrid();});dibGrid.applyFilterOnUrl($scope, "dibexComponentGrid");dibGrid.applySortOnUrl($scope, "dibexComponentGrid");$scope.reloadContainer  = function (options) {dibGrid.applyFilterOnUrl($scope, "dibexComponentGrid");dibGrid.applySortOnUrl($scope, "dibexComponentGrid");loadGrid();};};ctrl.$postLink = function () {$scope.reloadContainer({ force : true });};function loadGrid() {$scope.loadingData = true;dibCrud.list($scope, $element, crudController,'dibexComponentGrid',$scope.page, $scope.search, null, $scope.gridOptions.sortFields).then(function (data) {if (!!data.records == false)data.records = [];$scope.selectedItems = [];$scope.lastSelectedItem = null;var arraySelected = [];$scope.page.count = Math.ceil(data.filtertotal / $scope.page.limit, 10);$scope.page.records = data.filtertotal;$scope.page.totalRecords = data.total;$scope.page.fromRecord = $scope.page.number==1? 1 : ($scope.page.number-1)*$scope.page.limit;$scope.page.toRecord = $scope.page.fromRecord==1? $scope.page.fromRecord + data.records.length - 1 : $scope.page.fromRecord + data.records.length;if ($scope.page.fromRecord == 1 && data.records.length ==0 ) {$scope.page.fromRecord = 0;}
if ($scope.page.number != 1 && data.records.length ==0) {loadGrid();$scope.page.number --;return;}
$scope.loadingData = false;$scope.gridData = data.records;$scope.$broadcast('load');$timeout(function () {$('[dib-container=dibexComponentGrid]').find('[select-default]').trigger('refreshDefault');},100);}, function (error) {$scope.loadingData = false;});};}})();