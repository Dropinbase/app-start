(function() {var require = ['/dropins/setNgMaterial/dibForm/js/component/formPaging.js','/dropins/setNgMaterial/dibForm/js/services/dibForm.js'];require.push('/dropins/setNgMaterial/dibGlobals/js/component/selectDefault.js');var files = [];angular.forEach(require, function (file,index) {files.push(DIB.base_url+'/files'+file);});var dibtestConsultantForm = angular.module('dibtestConsultantForm', [files]);dibtestConsultantForm.service('service155435',service155435);service155435.$inject = ['dibAjax', 'dibDiscover', '$q'];function service155435(dibAjax, dibDiscover, $q) {return {list : list};function list($scope, $element, query, modelType, page) {var url = dibDiscover.updateQueryStringDropdown(DIB.base_url + "/peff/Crud/componentlist/dibtestConsultantForm?containerItemId=155435", query, modelType, page);var requestInfo = dibDiscover.addToUrl({field :$('#ci155435'),$scope : $scope,container : $element,url : url});return dibAjax.post(requestInfo, {excludeFromCancels : true,factoryResult : function (data) {return data.records;}});};};dibtestConsultantForm.factory('dibtestConsultantFormDefinition',dibtestConsultantFormDefinition);dibtestConsultantFormDefinition.$inject = ['dibContainer','service155435'];function dibtestConsultantFormDefinition(dibContainer,service155435) {return {model : model,view : view,info : info,primaryKeys : primaryKeys};function model() {var model = {};model._GET = {};model['id'] = '';model._GET['id'] = dibContainer.modelItem({key : 'id',dataType : "number",create : false,update : false,service : null,itemAlias : 'id'});model['name'] = '';model._GET['name'] = dibContainer.modelItem({key : 'name',dataType : "text",create : true,update : true,service : null,itemAlias : false});model['notes'] = '';model._GET['notes'] = dibContainer.modelItem({key : 'notes',dataType : "text",create : true,update : true,service : null,itemAlias : false});model['mobile'] = '';model._GET['mobile'] = dibContainer.modelItem({key : 'mobile',dataType : "text",create : true,update : true,service : null,itemAlias : 'mobile'});model['email'] = '';model._GET['email'] = dibContainer.modelItem({key : 'email',dataType : "text",create : true,update : true,service : null,itemAlias : false});model['address1'] = '';model._GET['address1'] = dibContainer.modelItem({key : 'address1',dataType : "text",create : true,update : true,service : null,itemAlias : 'address1'});model['address2'] = '';model._GET['address2'] = dibContainer.modelItem({key : 'address2',dataType : "text",create : true,update : true,service : null,itemAlias : false});model['city_town'] = '';model._GET['city_town'] = dibContainer.modelItem({key : 'city_town',dataType : "text",create : true,update : true,service : null,itemAlias : false});model['country'] = '';model._GET['country'] = dibContainer.modelItem({key : 'country',dataType : "text",create : true,update : true,service : null,itemAlias : false});model['longitude'] = '';model._GET['longitude'] = dibContainer.modelItem({key : 'longitude',dataType : "number",create : true,update : true,service : null,itemAlias : false});model['latitude'] = '';model._GET['latitude'] = dibContainer.modelItem({key : 'latitude',dataType : "number",create : true,update : true,service : null,itemAlias : false});model['selected___employed_at_id'] = '';model._GET['employed_at_id'] = dibContainer.modelItem({key : 'employed_at_id',dataType : "select",create : true,update : true,service : service155435,itemAlias : false});return model;};function view() {var view = {};view.setParentChineseName = {'disabled' : false,'visible' : true, 'class' : null, 'style' : null };view.refreshParent = {'disabled' : false,'visible' : true, 'class' : null, 'style' : null };view.id = {'disabled' : false,'visible' : true, 'class' : null, 'style' : null };view.mobile = {'disabled' : false,'visible' : true, 'class' : null, 'style' : null };view.address1 = {'disabled' : false,'visible' : true, 'class' : null, 'style' : null };view.btn = {'disabled' : false,'visible' : true, 'class' : null, 'style' : null };return view;};function info(){var container = {};container.Id = '7157';container.Name = 'dibtestConsultantForm';container.SubContainerItemAliases = [];return container;};function primaryKeys() {return ["id"];};};dibtestConsultantForm.component('dibtestConsultantForm', {controllerAs: 'dibtestConsultantForm',templateUrl: DIB.base_url + '/dropins/setNgMaterial/dibForm/Template/view/dibtestConsultantForm.html?v=' + new Date().getTime(),controller : component__dibtestConsultantForm});component__dibtestConsultantForm.$inject = [ 'dibtestConsultantFormDefinition','$scope','$element','dibCrud','dibNavigation','dibAction','dibContainer','dibDiscover','dibRecord','dibUtility','dibCommon','$log','$q','$ocLazyLoad','dibForm', 'dibMessage','$location','dibAction','dibUtility', '$timeout', 'dibActiveFilterState','service155435'];function component__dibtestConsultantForm(dibtestConsultantFormDefinition,$scope,$element,dibCrud,dibNavigation,dibAction,dibContainer,dibDiscover,dibRecord,dibUtility,dibCommon,$log,$q,$ocLazyLoad,dibForm, dibMessage,$location,dibAction,dibUtility, $timeout, dibActiveFilterState,service155435) {var ctrl = this;var crudController = "/peff/Crud";var $dibContainer = $element.first();$scope.container = dibtestConsultantFormDefinition.info();$scope.model = dibtestConsultantFormDefinition.model();$scope.view = dibtestConsultantFormDefinition.view();$scope.primaryKeys = dibtestConsultantFormDefinition.primaryKeys();$scope.dibCommon = dibCommon;dibContainer.watchModel($scope, function () {});var $dibContainer = $element.first();$scope.menus = {};function filterList($scope,$dibContainer,service, query, dropdown) {return service.list($scope,$dibContainer, query).then(function (items) {dropdown.items = items;return $q.when();});}
$scope.dropdowns = {};$scope.dropdowns.service155435 = {};$scope.dropdowns.service155435.items = [];var cancelService155435 = null;var query155435 = '';$scope.loadService155435 = function (query, skipTimeout) {if (query155435 != query) {query155435 = query;if (!!skipTimeout) {return filterList($scope,$dibContainer,service155435, query, $scope.dropdowns.service155435);} else {if (!!cancelService155435) $timeout.clear(cancelService155435);cancelService155435 = $timeout(function () {return filterList($scope,$dibContainer,service155435, query, $scope.dropdowns.service155435);}, 100);return cancelService155435;}};};$scope.dropdowns.service155435.getItems = function (query,modelType) {return service155435.list($scope,$dibContainer, query,modelType);};$scope.select155435 = function (model,modelName,fieldName) {if (!!modelName == false) modelName ="model";var $element =  $('#ci155435');if (!!$element.attr('select-model') === false) {$element = $element.find('[select-model]');}
var modelName =  'selected___' + fieldName;$element.trigger('select');if (!!model[modelName]  === false) {return  false;}
angular.forEach($scope.dropdowns.service155435.items, function (item, index)   {if (item.id == model[modelName]['id']) {model[modelName]['id_display_value'] = item.id_display_value;return false;}});};$scope.openAuditTrail = function (portAlias) {var primaryKeyData = dibRecord.primaryKeyAuditIds($scope.primaryKeys, $scope.model);if (primaryKeyData.length > 0) {dibCommon.goTo(DIB.audit_trail_container,portAlias,true,"?filter_pef_table_id=%3D1442&filter_record_id=%3D"+primaryKeyData);} else {dibCommon.goTo(DIB.audit_trail_container,portAlias,true,"?filter_pef_table_id=%3D1442");}};ctrl.$onInit = function () {$scope.addModel = function () {dibForm.addModel($scope, "dibtestConsultantForm");};$scope.deleteRecord = function (options) {dibForm.deleteRecord('dibtestConsultantForm', $scope, $scope.dibtestConsultantForm, options, crudController).then(function (){dibNavigation.reset();}).catch(function (data) {});};$scope.saveModel = function (options) {if ($scope.loadingData) return $q.reject('Busy loading...');if (dibForm.validate($scope, $scope.dibtestConsultantForm)) {$scope.loadingData =  true;var primaryKeyData = dibRecord.primaryKeyData($scope.primaryKeys, $scope.model);return dibForm.updateRecord('dibtestConsultantForm', $scope, $scope.dibtestConsultantForm, crudController, options).then(function () {if (Object.keys(primaryKeyData).length>0) {} else {loadForm();}}).catch(function (data) {});}};var mdTabs = $("[dib-container=dibtestConsultantForm]").closest('md-tabs');var tabsScope = null;if (mdTabs.length === 0) {mdTabs = null;}
else {tabsScope = mdTabs.scope();}
$scope.$watch('dibtestConsultantForm.$dirty', function (newValue, oldValue) {dibNavigation.containerDirty = newValue;if (dibNavigation.containerDirty && !!mdTabs && !!tabsScope) {var currentIndex = tabsScope.selectedIndex;dibNavigation.addSaveFailedPromise(function(tabIndex) {tabsScope.selectedIndex = tabIndex;return $q.when();}, [currentIndex]);}},true);dibNavigation.addSavePromise($scope.saveModel);$scope.setDependencyData = function (object) {return dibForm.setDependencyData($scope,object);};$scope.itemAliasData = function () {return angular.copy($scope.primaryKeyData);};$scope.clearForm = function () {if ($scope.loadingData) return;$scope.primaryKeyData = null;$scope.reloadContainer();dibForm.clean($scope.dibtestConsultantForm,$scope.model);};$scope.reloadContainer = function (options) {$element.find('[dib-container-name=dibtestConsultantForm][select-default]').trigger('refreshDefault');$scope.autoRefresh = true;loadForm ();};};ctrl.$postLink = function () {var isUrlContainer = dibContainer.urlContainer('dibtestConsultantForm');if (isUrlContainer) {if (!!$location.search()['record'] && $location.search()['record']!='new') {$scope.$broadcast('load');}} else {$scope.$broadcast('load');}
$scope.reloadContainer({ force : true });dibContainer.injectionCompleted();};function loadForm () {dibNavigation.reset();dibNavigation.addSavePromise($scope.saveModel);$scope.recordStatus = null;var isUrlContainer = dibContainer.urlContainer('dibtestConsultantForm');if (isUrlContainer) {if (!!$location.search()['record'] && $location.search()['record']!='new') {return;}
if (!!$location.search()['record'] && $location.search()['record']=='new') {dibForm.clean($scope.dibtestConsultantForm,$scope.model);}}
$scope.primaryKeyData = isUrlContainer ? dibDiscover.getPrimaryKeysFromUrl() : $scope.primaryKeyData;if (!!$scope.primaryKeyData === false) {$scope.primaryKeyData = {};angular.forEach($scope.primaryKeys, function (key,index) {$scope.model[key] = 0;});}
if (Object.keys($scope.primaryKeyData).length ==0) {$scope.recordStatus = "create";} else {$scope.recordStatus = "update";}
$scope.loadingData = true;$scope.currentPrimaryKeyData = $scope.primaryKeyData;dibCrud.read($scope,crudController,'dibtestConsultantForm',{primaryKeyData : $scope.currentPrimaryKeyData,createParams: "{}"},$scope).then(function (model) {$scope.model = model;$scope.currentPrimaryKeyData = dibRecord.primaryKeyData($scope.primaryKeys, $scope.model);$scope.$broadcast('load');$scope.dibtestConsultantForm.$setUntouched();$scope.dibtestConsultantForm.$setPristine();var timeoutTest = $timeout(function () {dibContainer.reloadChildren({containerName: 'dibtestConsultantForm'});},500);$log.debug("containerName read->model",$scope.model );$scope.loadingData =  false;}).catch(function (error) {$scope.$broadcast('load');$scope.loadingData =  false;});}}})();